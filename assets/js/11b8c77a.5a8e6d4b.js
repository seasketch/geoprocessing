"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[32641],{15012:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>t,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=n(74848),o=n(28453);const i={},s="geographySchema",l={id:"api/geoprocessing/variables/geographySchema",title:"geographySchema",description:"A geographic area (Polygon) for planning.  Typically used to represent a planning area",source:"@site/docs/api/geoprocessing/variables/geographySchema.md",sourceDirName:"api/geoprocessing/variables",slug:"/api/geoprocessing/variables/geographySchema",permalink:"/geoprocessing/docs/next/api/geoprocessing/variables/geographySchema",draft:!1,unlisted:!1,editUrl:"https://github.com/seasketch/geoprocessing/tree/main/website/templates/shared/docs/api/geoprocessing/variables/geographySchema.md",tags:[],version:"current",frontMatter:{}},t={},d=[{value:"Type declaration",id:"type-declaration",level:2},{value:"bboxFilter",id:"bboxfilter",level:3},{value:"datasourceId",id:"datasourceid",level:3},{value:"display",id:"display",level:3},{value:"geographyId",id:"geographyid",level:3},{value:"groups",id:"groups",level:3},{value:"layerId",id:"layerid",level:3},{value:"precalc",id:"precalc",level:3},{value:"propertyFilter",id:"propertyfilter",level:3}];function c(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"geographyschema",children:"geographySchema"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ts",children:'const geographySchema: ZodObject<object, "strip", ZodTypeAny, object, object>;\n'})}),"\n",(0,a.jsx)(r.p,{children:"A geographic area (Polygon) for planning.  Typically used to represent a planning area"}),"\n",(0,a.jsx)(r.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,a.jsx)(r.h3,{id:"bboxfilter",children:"bboxFilter"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ts",children:"bboxFilter: ZodOptional<ZodUnion<[ZodTuple<[ZodNumber, ZodNumber, ZodNumber, ZodNumber], null>, ZodTuple<[ZodNumber, ZodNumber, ZodNumber, ZodNumber, ZodNumber, ZodNumber], null>]>>;\n"})}),"\n",(0,a.jsx)(r.p,{children:"Optional, constrain geography to only features within a bounding box"}),"\n",(0,a.jsx)(r.h3,{id:"datasourceid",children:"datasourceId"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ts",children:"datasourceId: ZodString;\n"})}),"\n",(0,a.jsx)(r.p,{children:"ID of datasource containing geography boundary"}),"\n",(0,a.jsx)(r.h3,{id:"display",children:"display"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ts",children:"display: ZodString;\n"})}),"\n",(0,a.jsx)(r.p,{children:"Display name for the geography"}),"\n",(0,a.jsx)(r.h3,{id:"geographyid",children:"geographyId"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ts",children:"geographyId: ZodString;\n"})}),"\n",(0,a.jsx)(r.p,{children:"Unique name of the geography"}),"\n",(0,a.jsx)(r.h3,{id:"groups",children:"groups"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ts",children:'groups: ZodOptional<ZodArray<ZodString, "many">>;\n'})}),"\n",(0,a.jsx)(r.p,{children:"Optional, sub-geography identifier. Useful when you have multiple groupings/levels of geographies and want to select for a specific group"}),"\n",(0,a.jsx)(r.h3,{id:"layerid",children:"layerId"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ts",children:"layerId: ZodOptional<ZodString>;\n"})}),"\n",(0,a.jsx)(r.p,{children:"Optional, defines external layer for visualizing the geography"}),"\n",(0,a.jsx)(r.h3,{id:"precalc",children:"precalc"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ts",children:"precalc: ZodBoolean;\n"})}),"\n",(0,a.jsx)(r.p,{children:"Optional, defines whether or not precalc should be run for this geography"}),"\n",(0,a.jsx)(r.h3,{id:"propertyfilter",children:"propertyFilter"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ts",children:'propertyFilter: ZodOptional<ZodObject<object, "strip", ZodTypeAny, object, object>>;\n'})}),"\n",(0,a.jsx)(r.p,{children:"Required if external datasource used, defines filter to constrain geography features, matches feature property having one or more specific values"})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>l});var a=n(96540);const o={},i=a.createContext(o);function s(e){const r=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(i.Provider,{value:r},e.children)}}}]);