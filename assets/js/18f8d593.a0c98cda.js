"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[28639],{26290:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Getting Started","collapsed":false,"items":[{"type":"link","label":"Introduction","href":"/geoprocessing/docs/","docId":"introduction","unlisted":false},{"type":"link","label":"Concepts","href":"/geoprocessing/docs/concepts","docId":"concepts/Concepts","unlisted":false},{"type":"link","label":"Tutorials","href":"/geoprocessing/docs/tutorials","docId":"tutorials/Tutorials","unlisted":false},{"type":"link","label":"Command Line Interface (CLI)","href":"/geoprocessing/docs/cli","docId":"CLI","unlisted":false},{"type":"link","label":"Architecture","href":"/geoprocessing/docs/architecture","docId":"architecture/Architecture","unlisted":false},{"type":"link","label":"Migration Guide","href":"/geoprocessing/docs/Migrating","docId":"Migrating","unlisted":false},{"type":"link","label":"Extending","href":"/geoprocessing/docs/extending","docId":"Extending","unlisted":false},{"type":"link","label":"Tips and Tricks","href":"/geoprocessing/docs/tipsandtricks","docId":"Tipsandtricks","unlisted":false}],"collapsible":true},{"type":"category","label":"Library","items":[{"type":"link","label":"Typescript API","href":"/geoprocessing/docs/api/","docId":"api/index","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Advanced Guides","items":[{"type":"link","label":"GIP 1: i18n Localization","href":"/geoprocessing/docs/gip/GIP-1-i18n","docId":"gip/GIP-1-i18n","unlisted":false},{"type":"link","label":"Edge Cases & Limits","href":"/geoprocessing/docs/limits","docId":"EdgesAndLimits","unlisted":false},{"type":"link","label":"Testing","href":"/geoprocessing/docs/testing","docId":"Testing","unlisted":false},{"type":"link","label":"Contributing","href":"/geoprocessing/docs/contributing","docId":"Contributing","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Other","items":[{"type":"link","label":"Tips and Tricks","href":"/geoprocessing/docs/tipsandtricks","docId":"Tipsandtricks","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"api/client-core/index":{"id":"api/client-core/index","title":"client-core","description":"client-ui provides everything for creating geoprocessing client interface,"},"api/client-ui/classes/ReportError":{"id":"api/client-ui/classes/ReportError","title":"ReportError","description":"Extends"},"api/client-ui/functions/App":{"id":"api/client-ui/functions/App","title":"App()","description":"Parameters"},"api/client-ui/functions/Card":{"id":"api/client-ui/functions/Card","title":"Card()","description":"Parameters"},"api/client-ui/functions/CardDecorator":{"id":"api/client-ui/functions/CardDecorator","title":"CardDecorator()","description":"Default decorator.  Create additional building on StoryLayout for more sophisticated needs"},"api/client-ui/functions/ChartLegend":{"id":"api/client-ui/functions/ChartLegend","title":"ChartLegend()","description":"Horizontal stacked bar chart component"},"api/client-ui/functions/CheckboxGroup":{"id":"api/client-ui/functions/CheckboxGroup","title":"CheckboxGroup()","description":"Controlled checkbox group"},"api/client-ui/functions/Circle":{"id":"api/client-ui/functions/Circle","title":"Circle()","description":"Circle with user-defined component inside"},"api/client-ui/functions/ClassTable":{"id":"api/client-ui/functions/ClassTable","title":"ClassTable()","description":"Table displaying class metrics, one class per table row.  Having more than one metric per class may yield unexpected results"},"api/client-ui/functions/ClassTableStyled":{"id":"api/client-ui/functions/ClassTableStyled","title":"ClassTableStyled()","description":"ClassTableStyled(props)"},"api/client-ui/functions/Collapse":{"id":"api/client-ui/functions/Collapse","title":"Collapse()","description":"Parameters"},"api/client-ui/functions/CollapseGroup":{"id":"api/client-ui/functions/CollapseGroup","title":"CollapseGroup()","description":"Parameters"},"api/client-ui/functions/createReportDecorator":{"id":"api/client-ui/functions/createReportDecorator","title":"createReportDecorator()","description":"Think of this as a ReportDecorator generator, that allows you to pass in context and override the default"},"api/client-ui/functions/DataDownload":{"id":"api/client-ui/functions/DataDownload","title":"DataDownload()","description":"Dropdown menu for transforming data to CSV/JSON format and initiating a browser download"},"api/client-ui/functions/DataDownloadToolbar":{"id":"api/client-ui/functions/DataDownloadToolbar","title":"DataDownloadToolbar()","description":"Convenience component that creates a Toolbar with Header and DataDownload"},"api/client-ui/functions/Dropdown":{"id":"api/client-ui/functions/Dropdown","title":"Dropdown()","description":"Parameters"},"api/client-ui/functions/DropdownContainer":{"id":"api/client-ui/functions/DropdownContainer","title":"DropdownContainer()","description":"DropdownContainer(props)"},"api/client-ui/functions/DropdownItem":{"id":"api/client-ui/functions/DropdownItem","title":"DropdownItem()","description":"DropdownItem(props)"},"api/client-ui/functions/DropdownTrigger":{"id":"api/client-ui/functions/DropdownTrigger","title":"DropdownTrigger()","description":"DropdownTrigger(props)"},"api/client-ui/functions/EstimateLabel":{"id":"api/client-ui/functions/EstimateLabel","title":"EstimateLabel()","description":"EstimateLabel(props)"},"api/client-ui/functions/FilterSelectTable":{"id":"api/client-ui/functions/FilterSelectTable","title":"FilterSelectTable()","description":"Table with customizable filter functions as CheckboxGroup that when selected"},"api/client-ui/functions/FilterSelectTableStyled":{"id":"api/client-ui/functions/FilterSelectTableStyled","title":"FilterSelectTableStyled()","description":"FilterSelectTableStyled(props)"},"api/client-ui/functions/finishTask":{"id":"api/client-ui/functions/finishTask","title":"finishTask()","description":"Finishes task by hitting the remote cache, updating the hook with the task result and cleaning up"},"api/client-ui/functions/GeographySwitcher":{"id":"api/client-ui/functions/GeographySwitcher","title":"GeographySwitcher()","description":"Parameters"},"api/client-ui/functions/GreenPill":{"id":"api/client-ui/functions/GreenPill","title":"GreenPill()","description":"Parameters"},"api/client-ui/functions/GroupCircle":{"id":"api/client-ui/functions/GroupCircle","title":"GroupCircle()","description":"Circle with user-defined group colors"},"api/client-ui/functions/GroupCircleRow":{"id":"api/client-ui/functions/GroupCircleRow","title":"GroupCircleRow()","description":"GroupCircle with layout for use in table row"},"api/client-ui/functions/GroupPill":{"id":"api/client-ui/functions/GroupPill","title":"GroupPill()","description":"Pill with colors assigned to each group name"},"api/client-ui/functions/HorizontalStackedBar":{"id":"api/client-ui/functions/HorizontalStackedBar","title":"HorizontalStackedBar()","description":"Horizontal stacked bar chart component"},"api/client-ui/functions/InfoStatus":{"id":"api/client-ui/functions/InfoStatus","title":"InfoStatus()","description":"Parameters"},"api/client-ui/functions/IucnActivitiesCard":{"id":"api/client-ui/functions/IucnActivitiesCard","title":"IucnActivitiesCard()","description":"Returns"},"api/client-ui/functions/IucnDesignationTable":{"id":"api/client-ui/functions/IucnDesignationTable","title":"IucnDesignationTable()","description":"Returns"},"api/client-ui/functions/IucnLevelCircle":{"id":"api/client-ui/functions/IucnLevelCircle","title":"IucnLevelCircle()","description":"Parameters"},"api/client-ui/functions/IucnLevelCircleRow":{"id":"api/client-ui/functions/IucnLevelCircleRow","title":"IucnLevelCircleRow()","description":"Parameters"},"api/client-ui/functions/IucnLevelPill":{"id":"api/client-ui/functions/IucnLevelPill","title":"IucnLevelPill()","description":"Parameters"},"api/client-ui/functions/IucnMatrix":{"id":"api/client-ui/functions/IucnMatrix","title":"IucnMatrix()","description":"Returns"},"api/client-ui/functions/KeySection":{"id":"api/client-ui/functions/KeySection","title":"KeySection()","description":"Parameters"},"api/client-ui/functions/LanguageSwitcher":{"id":"api/client-ui/functions/LanguageSwitcher","title":"LanguageSwitcher()","description":"Returns"},"api/client-ui/functions/LayerToggle":{"id":"api/client-ui/functions/LayerToggle","title":"LayerToggle()","description":"Parameters"},"api/client-ui/functions/ObjectiveStatus":{"id":"api/client-ui/functions/ObjectiveStatus","title":"ObjectiveStatus()","description":"Parameters"},"api/client-ui/functions/Pill":{"id":"api/client-ui/functions/Pill","title":"Pill()","description":"Parameters"},"api/client-ui/functions/PillColumn":{"id":"api/client-ui/functions/PillColumn","title":"PillColumn()","description":"Parameters"},"api/client-ui/functions/PointyCircle":{"id":"api/client-ui/functions/PointyCircle","title":"PointyCircle()","description":"Circle with pointy top right corner"},"api/client-ui/functions/ProgressBar":{"id":"api/client-ui/functions/ProgressBar","title":"ProgressBar()","description":"ProgressBar(props)"},"api/client-ui/functions/ProgressBarWrapper":{"id":"api/client-ui/functions/ProgressBarWrapper","title":"ProgressBarWrapper()","description":"ProgressBarWrapper(props)"},"api/client-ui/functions/RbcsActivitiesCard":{"id":"api/client-ui/functions/RbcsActivitiesCard","title":"RbcsActivitiesCard()","description":"Returns"},"api/client-ui/functions/RbcsIcon":{"id":"api/client-ui/functions/RbcsIcon","title":"RbcsIcon()","description":"Parameters"},"api/client-ui/functions/RbcsLearnMore":{"id":"api/client-ui/functions/RbcsLearnMore","title":"RbcsLearnMore()","description":"Describes RBCS and lists minimum level of protection required for each objective"},"api/client-ui/functions/RbcsMpaClassPanel":{"id":"api/client-ui/functions/RbcsMpaClassPanel","title":"RbcsMpaClassPanel()","description":"Sketch collection status panel for MPA regulation-based classification"},"api/client-ui/functions/RbcsMpaObjectiveStatus":{"id":"api/client-ui/functions/RbcsMpaObjectiveStatus","title":"RbcsMpaObjectiveStatus()","description":"Parameters"},"api/client-ui/functions/RbcsNetworkObjectiveStatus":{"id":"api/client-ui/functions/RbcsNetworkObjectiveStatus","title":"RbcsNetworkObjectiveStatus()","description":"Displays status toward meeting Network objective"},"api/client-ui/functions/RbcsZoneClassPanel":{"id":"api/client-ui/functions/RbcsZoneClassPanel","title":"RbcsZoneClassPanel()","description":"Single-sketch status panel for MPA regulation-based classification"},"api/client-ui/functions/RbcsZoneRegIcon":{"id":"api/client-ui/functions/RbcsZoneRegIcon","title":"RbcsZoneRegIcon()","description":"Parameters"},"api/client-ui/functions/ReportChartFigure":{"id":"api/client-ui/functions/ReportChartFigure","title":"ReportChartFigure()","description":"Chart container styled with spacing for layout in report pages"},"api/client-ui/functions/ReportDecorator":{"id":"api/client-ui/functions/ReportDecorator","title":"ReportDecorator()","description":"Decorator that renders a story into ReportStoryLayout."},"api/client-ui/functions/ReportPage":{"id":"api/client-ui/functions/ReportPage","title":"ReportPage()","description":"Parameters"},"api/client-ui/functions/ReportStoryLayout":{"id":"api/client-ui/functions/ReportStoryLayout","title":"ReportStoryLayout()","description":"Wraps a story to look and behave like a sketch report"},"api/client-ui/functions/ReportTableStyled":{"id":"api/client-ui/functions/ReportTableStyled","title":"ReportTableStyled()","description":"ReportTableStyled(props)"},"api/client-ui/functions/ReportTextDirection":{"id":"api/client-ui/functions/ReportTextDirection","title":"ReportTextDirection()","description":"Controls text direction for report based on current language"},"api/client-ui/functions/ResultsCard":{"id":"api/client-ui/functions/ResultsCard","title":"ResultsCard()","description":"Type Parameters"},"api/client-ui/functions/runTask":{"id":"api/client-ui/functions/runTask","title":"runTask()","description":"Runs task by sending GET request to url with payload and optional flags"},"api/client-ui/functions/SegmentControl":{"id":"api/client-ui/functions/SegmentControl","title":"SegmentControl()","description":"Parameters"},"api/client-ui/functions/SimpleButton":{"id":"api/client-ui/functions/SimpleButton","title":"SimpleButton()","description":"A simple button component that accepts any text value so unicode can be used including emojis"},"api/client-ui/functions/SimpleButtonStyled":{"id":"api/client-ui/functions/SimpleButtonStyled","title":"SimpleButtonStyled()","description":"SimpleButtonStyled(props)"},"api/client-ui/functions/Skeleton":{"id":"api/client-ui/functions/Skeleton","title":"Skeleton()","description":"Skeleton(props)"},"api/client-ui/functions/SketchAttributesCard":{"id":"api/client-ui/functions/SketchAttributesCard","title":"SketchAttributesCard()","description":"Parameters"},"api/client-ui/functions/SketchClassTable":{"id":"api/client-ui/functions/SketchClassTable","title":"SketchClassTable()","description":"Table displaying sketch class metrics, one table row per sketch"},"api/client-ui/functions/SketchClassTableStyled":{"id":"api/client-ui/functions/SketchClassTableStyled","title":"SketchClassTableStyled()","description":"Style component for SketchClassTable"},"api/client-ui/functions/SmallReportTableStyled":{"id":"api/client-ui/functions/SmallReportTableStyled","title":"SmallReportTableStyled()","description":"SmallReportTableStyled(props)"},"api/client-ui/functions/StyledCircle":{"id":"api/client-ui/functions/StyledCircle","title":"StyledCircle()","description":"Default style for Circle"},"api/client-ui/functions/StyledPill":{"id":"api/client-ui/functions/StyledPill","title":"StyledPill()","description":"StyledPill(props)"},"api/client-ui/functions/StyledTwoColorPointyCircle":{"id":"api/client-ui/functions/StyledTwoColorPointyCircle","title":"StyledTwoColorPointyCircle()","description":"StyledTwoColorPointyCircle(props)"},"api/client-ui/functions/Table":{"id":"api/client-ui/functions/Table","title":"Table()","description":"Table component suited to geoprocessing client reports."},"api/client-ui/functions/TableStyled":{"id":"api/client-ui/functions/TableStyled","title":"TableStyled()","description":"TableStyled(props)"},"api/client-ui/functions/Toolbar":{"id":"api/client-ui/functions/Toolbar","title":"Toolbar()","description":"Parameters"},"api/client-ui/functions/ToolbarCard":{"id":"api/client-ui/functions/ToolbarCard","title":"ToolbarCard()","description":"Parameters"},"api/client-ui/functions/ToolbarStyled":{"id":"api/client-ui/functions/ToolbarStyled","title":"ToolbarStyled()","description":"ToolbarStyled(props)"},"api/client-ui/functions/Tooltip":{"id":"api/client-ui/functions/Tooltip","title":"Tooltip()","description":"Parameters"},"api/client-ui/functions/TooltipContainer":{"id":"api/client-ui/functions/TooltipContainer","title":"TooltipContainer()","description":"TooltipContainer(props)"},"api/client-ui/functions/TooltipItem":{"id":"api/client-ui/functions/TooltipItem","title":"TooltipItem()","description":"TooltipItem(props)"},"api/client-ui/functions/TooltipTrigger":{"id":"api/client-ui/functions/TooltipTrigger","title":"TooltipTrigger()","description":"TooltipTrigger(props)"},"api/client-ui/functions/Translator":{"id":"api/client-ui/functions/Translator","title":"Translator()","description":"Loads translations asynchronously using dynamic import abd react-i18next will have translations eventually and update"},"api/client-ui/functions/TwoColorPointyCircle":{"id":"api/client-ui/functions/TwoColorPointyCircle","title":"TwoColorPointyCircle()","description":"Two-color reg-based classification circle for collection index value"},"api/client-ui/functions/useCheckboxes":{"id":"api/client-ui/functions/useCheckboxes","title":"useCheckboxes()","description":"Hook to maintain checkbox state"},"api/client-ui/functions/useFunction":{"id":"api/client-ui/functions/useFunction","title":"useFunction()","description":"Runs the given geoprocessing function for the current sketch, as defined by ReportContext"},"api/client-ui/functions/useLanguage":{"id":"api/client-ui/functions/useLanguage","title":"useLanguage()","description":"Hook that returns current language from report context, and provides function to change the language"},"api/client-ui/functions/useSketchProperties":{"id":"api/client-ui/functions/useSketchProperties","title":"useSketchProperties()","description":"Returns"},"api/client-ui/functions/VerticalSpacer":{"id":"api/client-ui/functions/VerticalSpacer","title":"VerticalSpacer()","description":"Parameters"},"api/client-ui/functions/WarningPill":{"id":"api/client-ui/functions/WarningPill","title":"WarningPill()","description":"Parameters"},"api/client-ui/functions/WatersDiagram":{"id":"api/client-ui/functions/WatersDiagram","title":"WatersDiagram()","description":"Serves up a translatable SVG image showing nautical boundaries"},"api/client-ui/index":{"id":"api/client-ui/index","title":"client-ui","description":"client-ui provides all of the core React UI components for geoprocessing"},"api/client-ui/interfaces/AppProps":{"id":"api/client-ui/interfaces/AppProps","title":"AppProps","description":"Properties"},"api/client-ui/interfaces/CardProps":{"id":"api/client-ui/interfaces/CardProps","title":"CardProps","description":"Properties"},"api/client-ui/interfaces/CircleProps":{"id":"api/client-ui/interfaces/CircleProps","title":"CircleProps","description":"Properties"},"api/client-ui/interfaces/ClassTableColumnConfig":{"id":"api/client-ui/interfaces/ClassTableColumnConfig","title":"ClassTableColumnConfig","description":"Properties"},"api/client-ui/interfaces/ClassTableProps":{"id":"api/client-ui/interfaces/ClassTableProps","title":"ClassTableProps","description":"Properties"},"api/client-ui/interfaces/CollapseGroupProps":{"id":"api/client-ui/interfaces/CollapseGroupProps","title":"CollapseGroupProps","description":"Properties"},"api/client-ui/interfaces/CollapseProps":{"id":"api/client-ui/interfaces/CollapseProps","title":"CollapseProps","description":"Properties"},"api/client-ui/interfaces/DataDownloadProps":{"id":"api/client-ui/interfaces/DataDownloadProps","title":"DataDownloadProps","description":"Extends"},"api/client-ui/interfaces/DataDownloadToolbarProps":{"id":"api/client-ui/interfaces/DataDownloadToolbarProps","title":"DataDownloadToolbarProps","description":"Extends"},"api/client-ui/interfaces/DataFormatters":{"id":"api/client-ui/interfaces/DataFormatters","title":"DataFormatters","description":"Indexable"},"api/client-ui/interfaces/DownloadOption":{"id":"api/client-ui/interfaces/DownloadOption","title":"DownloadOption","description":"Properties"},"api/client-ui/interfaces/DropdownContainerProps":{"id":"api/client-ui/interfaces/DropdownContainerProps","title":"DropdownContainerProps","description":"Properties"},"api/client-ui/interfaces/DropdownProps":{"id":"api/client-ui/interfaces/DropdownProps","title":"DropdownProps","description":"Renders an element with a dropdown list"},"api/client-ui/interfaces/FilterSelect":{"id":"api/client-ui/interfaces/FilterSelect","title":"FilterSelect\\\\<D\\\\>","description":"Custom table data filters that are only active when selected by the user"},"api/client-ui/interfaces/FilterSelectOption":{"id":"api/client-ui/interfaces/FilterSelectOption","title":"FilterSelectOption\\\\<D\\\\>","description":"Custom table data filter"},"api/client-ui/interfaces/FilterSelectTableOptions":{"id":"api/client-ui/interfaces/FilterSelectTableOptions","title":"FilterSelectTableOptions\\\\<D\\\\>","description":"The empty definitions of below provides a base definition for the parts used by useTable, that can then be extended in the users code."},"api/client-ui/interfaces/GeographySwitcherProps":{"id":"api/client-ui/interfaces/GeographySwitcherProps","title":"GeographySwitcherProps","description":"Properties"},"api/client-ui/interfaces/GroupCircleProps":{"id":"api/client-ui/interfaces/GroupCircleProps","title":"GroupCircleProps","description":"Properties"},"api/client-ui/interfaces/GroupCircleRowProps":{"id":"api/client-ui/interfaces/GroupCircleRowProps","title":"GroupCircleRowProps","description":"Properties"},"api/client-ui/interfaces/GroupPillProps":{"id":"api/client-ui/interfaces/GroupPillProps","title":"GroupPillProps","description":"Properties"},"api/client-ui/interfaces/HorizontalStackedBarProps":{"id":"api/client-ui/interfaces/HorizontalStackedBarProps","title":"HorizontalStackedBarProps","description":"Properties"},"api/client-ui/interfaces/InfoStatusProps":{"id":"api/client-ui/interfaces/InfoStatusProps","title":"InfoStatusProps","description":"Properties"},"api/client-ui/interfaces/IucnActivityRank":{"id":"api/client-ui/interfaces/IucnActivityRank","title":"IucnActivityRank","description":"Properties"},"api/client-ui/interfaces/IucnLevelCircleProps":{"id":"api/client-ui/interfaces/IucnLevelCircleProps","title":"IucnLevelCircleProps","description":"Properties"},"api/client-ui/interfaces/IucnLevelCircleRowProps":{"id":"api/client-ui/interfaces/IucnLevelCircleRowProps","title":"IucnLevelCircleRowProps","description":"Properties"},"api/client-ui/interfaces/IucnLevelPillProps":{"id":"api/client-ui/interfaces/IucnLevelPillProps","title":"IucnLevelPillProps","description":"Properties"},"api/client-ui/interfaces/KeySectionProps":{"id":"api/client-ui/interfaces/KeySectionProps","title":"KeySectionProps","description":"Properties"},"api/client-ui/interfaces/LabelProps":{"id":"api/client-ui/interfaces/LabelProps","title":"LabelProps","description":"Array of Labels to be inserted into the waters diagram"},"api/client-ui/interfaces/LegendProps":{"id":"api/client-ui/interfaces/LegendProps","title":"LegendProps","description":"Properties"},"api/client-ui/interfaces/ObjectiveStatusProps":{"id":"api/client-ui/interfaces/ObjectiveStatusProps","title":"ObjectiveStatusProps","description":"Properties"},"api/client-ui/interfaces/PillColumnProps":{"id":"api/client-ui/interfaces/PillColumnProps","title":"PillColumnProps","description":"Properties"},"api/client-ui/interfaces/PillProps":{"id":"api/client-ui/interfaces/PillProps","title":"PillProps","description":"Properties"},"api/client-ui/interfaces/RbcsIconProps":{"id":"api/client-ui/interfaces/RbcsIconProps","title":"RbcsIconProps","description":"Properties"},"api/client-ui/interfaces/RbcsLearnMoreProps":{"id":"api/client-ui/interfaces/RbcsLearnMoreProps","title":"RbcsLearnMoreProps","description":"Properties"},"api/client-ui/interfaces/RbcsMpaClassPanelProps":{"id":"api/client-ui/interfaces/RbcsMpaClassPanelProps","title":"RbcsMpaClassPanelProps","description":"Properties"},"api/client-ui/interfaces/RbcsMpaObjectiveStatusProps":{"id":"api/client-ui/interfaces/RbcsMpaObjectiveStatusProps","title":"RbcsMpaObjectiveStatusProps","description":"Properties"},"api/client-ui/interfaces/RbcsNetworkObjectiveProps":{"id":"api/client-ui/interfaces/RbcsNetworkObjectiveProps","title":"RbcsNetworkObjectiveProps","description":"Properties"},"api/client-ui/interfaces/RbcsPanelProps":{"id":"api/client-ui/interfaces/RbcsPanelProps","title":"RbcsPanelProps","description":"Properties"},"api/client-ui/interfaces/ReportChartFigureProps":{"id":"api/client-ui/interfaces/ReportChartFigureProps","title":"ReportChartFigureProps","description":"Properties"},"api/client-ui/interfaces/ReportContextState":{"id":"api/client-ui/interfaces/ReportContextState","title":"ReportContextState","description":"Properties"},"api/client-ui/interfaces/ReportPageProps":{"id":"api/client-ui/interfaces/ReportPageProps","title":"ReportPageProps","description":"Properties"},"api/client-ui/interfaces/ReportStoryLayoutProps":{"id":"api/client-ui/interfaces/ReportStoryLayoutProps","title":"ReportStoryLayoutProps","description":"Properties"},"api/client-ui/interfaces/ResultsCardProps":{"id":"api/client-ui/interfaces/ResultsCardProps","title":"ResultsCardProps\\\\<T\\\\>","description":"Type Parameters"},"api/client-ui/interfaces/Row":{"id":"api/client-ui/interfaces/Row","title":"Row\\\\<D\\\\>","description":"Extends"},"api/client-ui/interfaces/SegmentControlProps":{"id":"api/client-ui/interfaces/SegmentControlProps","title":"SegmentControlProps","description":"Properties"},"api/client-ui/interfaces/SimpleButtonProbs":{"id":"api/client-ui/interfaces/SimpleButtonProbs","title":"SimpleButtonProbs","description":"Properties"},"api/client-ui/interfaces/SketchAttributesCardProps":{"id":"api/client-ui/interfaces/SketchAttributesCardProps","title":"SketchAttributesCardProps","description":"Properties"},"api/client-ui/interfaces/SketchClassTableProps":{"id":"api/client-ui/interfaces/SketchClassTableProps","title":"SketchClassTableProps","description":"Properties"},"api/client-ui/interfaces/StyledHorizontalStackedBarProps":{"id":"api/client-ui/interfaces/StyledHorizontalStackedBarProps","title":"StyledHorizontalStackedBarProps","description":"Properties"},"api/client-ui/interfaces/StyledLegendProps":{"id":"api/client-ui/interfaces/StyledLegendProps","title":"StyledLegendProps","description":"Properties"},"api/client-ui/interfaces/StyledTwoColorPointyCircleProps":{"id":"api/client-ui/interfaces/StyledTwoColorPointyCircleProps","title":"StyledTwoColorPointyCircleProps","description":"Properties"},"api/client-ui/interfaces/TableOptions":{"id":"api/client-ui/interfaces/TableOptions","title":"TableOptions\\\\<D\\\\>","description":"The empty definitions of below provides a base definition for the parts used by useTable, that can then be extended in the users code."},"api/client-ui/interfaces/ToolbarCardProps":{"id":"api/client-ui/interfaces/ToolbarCardProps","title":"ToolbarCardProps","description":"Properties"},"api/client-ui/interfaces/ToolbarProps":{"id":"api/client-ui/interfaces/ToolbarProps","title":"ToolbarProps","description":"Properties"},"api/client-ui/interfaces/TooltipContainerProps":{"id":"api/client-ui/interfaces/TooltipContainerProps","title":"TooltipContainerProps","description":"Properties"},"api/client-ui/interfaces/TooltipProps":{"id":"api/client-ui/interfaces/TooltipProps","title":"TooltipProps","description":"Renders an element with a tooltip"},"api/client-ui/interfaces/TwoColorPointyCircleProps":{"id":"api/client-ui/interfaces/TwoColorPointyCircleProps","title":"TwoColorPointyCircleProps","description":"Properties"},"api/client-ui/interfaces/VerticalSpacerProps":{"id":"api/client-ui/interfaces/VerticalSpacerProps","title":"VerticalSpacerProps","description":"Properties"},"api/client-ui/type-aliases/Block":{"id":"api/client-ui/type-aliases/Block","title":"Block","description":"Single rectangle block value representing length"},"api/client-ui/type-aliases/BlockGroup":{"id":"api/client-ui/type-aliases/BlockGroup","title":"BlockGroup","description":"Group of blocks with the same color"},"api/client-ui/type-aliases/Column":{"id":"api/client-ui/type-aliases/Column","title":"Column\\\\<D\\\\>","description":"Type Parameters"},"api/client-ui/type-aliases/HorizontalStackedBarRow":{"id":"api/client-ui/type-aliases/HorizontalStackedBarRow","title":"HorizontalStackedBarRow","description":"One or more BlockGroups forming a single linear stacked row"},"api/client-ui/type-aliases/RbcsMpaObjectiveRenderMsgFunction":{"id":"api/client-ui/type-aliases/RbcsMpaObjectiveRenderMsgFunction","title":"RbcsMpaObjectiveRenderMsgFunction()","description":"Parameters"},"api/client-ui/type-aliases/RbcsNetworkObjectiveRenderMsgFunction":{"id":"api/client-ui/type-aliases/RbcsNetworkObjectiveRenderMsgFunction","title":"RbcsNetworkObjectiveRenderMsgFunction()","description":"Parameters"},"api/client-ui/type-aliases/RowConfig":{"id":"api/client-ui/type-aliases/RowConfig","title":"RowConfig","description":"Type declaration"},"api/client-ui/type-aliases/StringOrNumber":{"id":"api/client-ui/type-aliases/StringOrNumber","title":"StringOrNumber","description":""},"api/client-ui/type-aliases/SUPPORTED_FORMAT":{"id":"api/client-ui/type-aliases/SUPPORTED_FORMAT","title":"SUPPORTED\\\\_FORMAT","description":""},"api/client-ui/type-aliases/TargetFormatter":{"id":"api/client-ui/type-aliases/TargetFormatter","title":"TargetFormatter()","description":"Function that given target value for current table row, the table row index, and total number of"},"api/dataproviders/functions/fgbFetchAll":{"id":"api/dataproviders/functions/fgbFetchAll","title":"fgbFetchAll()","description":"Fetch features within bounding box and deserializes them, awaiting all of them before returning."},"api/dataproviders/functions/fgBoundingBox":{"id":"api/dataproviders/functions/fgBoundingBox","title":"fgBoundingBox()","description":"Parameters"},"api/dataproviders/functions/genClipLoader":{"id":"api/dataproviders/functions/genClipLoader","title":"genClipLoader()","description":"Given a project client and 1 or more clip operations, returns a function that when called"},"api/dataproviders/functions/getFeatures":{"id":"api/dataproviders/functions/getFeatures","title":"getFeatures()","description":"Returns features for a variety of vector datasources and formats, with additional filter options"},"api/dataproviders/functions/loadCog":{"id":"api/dataproviders/functions/loadCog","title":"loadCog()","description":"Returns cog-aware georaster at given url.  Will not fetch raster values"},"api/dataproviders/functions/loadCogWindow":{"id":"api/dataproviders/functions/loadCogWindow","title":"~~loadCogWindow()~~","description":"Returns georaster window (image subset) defined by options.windowBox, otherwise loads the whole raster"},"api/dataproviders/index":{"id":"api/dataproviders/index","title":"dataproviders","description":"Index"},"api/geoprocessing/classes/ComplexityError":{"id":"api/geoprocessing/classes/ComplexityError","title":"ComplexityError","description":"Error signifying function threw due to not being able to handle the input - e.g. size/complexity"},"api/geoprocessing/classes/GeoprocessingHandler":{"id":"api/geoprocessing/classes/GeoprocessingHandler","title":"GeoprocessingHandler\\\\<T, G, P\\\\>","description":"Manages the task of executing a geoprocessing function within an AWS Lambda function."},"api/geoprocessing/classes/PreprocessingHandler":{"id":"api/geoprocessing/classes/PreprocessingHandler","title":"PreprocessingHandler\\\\<G, P\\\\>","description":"Lambda handler for a preprocessing function"},"api/geoprocessing/classes/ProjectClientBase":{"id":"api/geoprocessing/classes/ProjectClientBase","title":"ProjectClientBase","description":"Client for reading project configuration/metadata."},"api/geoprocessing/classes/ValidationError":{"id":"api/geoprocessing/classes/ValidationError","title":"ValidationError","description":"Error signifying input is not valid"},"api/geoprocessing/classes/VectorDataSource":{"id":"api/geoprocessing/classes/VectorDataSource","title":"VectorDataSource\\\\<T\\\\>","description":"Type Parameters"},"api/geoprocessing/enumerations/GeoprocessingTaskStatus":{"id":"api/geoprocessing/enumerations/GeoprocessingTaskStatus","title":"GeoprocessingTaskStatus","description":"Enumeration Members"},"api/geoprocessing/functions/anchorScore":{"id":"api/geoprocessing/functions/anchorScore","title":"anchorScore()","description":"Parameters"},"api/geoprocessing/functions/aquacultureScore":{"id":"api/geoprocessing/functions/aquacultureScore","title":"aquacultureScore()","description":"Parameters"},"api/geoprocessing/functions/area":{"id":"api/geoprocessing/functions/area","title":"area()","description":"Calculates the area of each sketch and collection."},"api/geoprocessing/functions/batchDelete":{"id":"api/geoprocessing/functions/batchDelete","title":"batchDelete()","description":"Parameters"},"api/geoprocessing/functions/batchDeleteTasks":{"id":"api/geoprocessing/functions/batchDeleteTasks","title":"batchDeleteTasks()","description":"Batch delete array of tasks"},"api/geoprocessing/functions/bboxOverlap":{"id":"api/geoprocessing/functions/bboxOverlap","title":"bboxOverlap()","description":"Returns whether bounding box A overlaps with or touches bounding box B"},"api/geoprocessing/functions/booleanOverlap":{"id":"api/geoprocessing/functions/booleanOverlap","title":"booleanOverlap()","description":"booleanOverlap(featureAInput, featureBInput, idProperty)"},"api/geoprocessing/functions/byteSize":{"id":"api/geoprocessing/functions/byteSize","title":"byteSize()","description":"Get length of string in bytes"},"api/geoprocessing/functions/capitalize":{"id":"api/geoprocessing/functions/capitalize","title":"capitalize()","description":"Capitalizes the first letter of string"},"api/geoprocessing/functions/chunk":{"id":"api/geoprocessing/functions/chunk","title":"chunk()","description":"Splits an array into chunks of size"},"api/geoprocessing/functions/classIdMapping":{"id":"api/geoprocessing/functions/classIdMapping","title":"classIdMapping()","description":"Returns mapping of class ID to class DataClass objects"},"api/geoprocessing/functions/classifyMPA":{"id":"api/geoprocessing/functions/classifyMPA","title":"classifyMPA()","description":"Given zone scores, returns object containing final scores, and mpa classification"},"api/geoprocessing/functions/classifyZone":{"id":"api/geoprocessing/functions/classifyZone","title":"classifyZone()","description":"Given activity scores, returns zone number"},"api/geoprocessing/functions/cleanCoords":{"id":"api/geoprocessing/functions/cleanCoords","title":"cleanCoords()","description":"Cleans geojson coordinates to be within the bounds of the world [-90, -180, 90, 180], so that they don\'t wrap off the end, and can be split"},"api/geoprocessing/functions/clip":{"id":"api/geoprocessing/functions/clip","title":"~~clip()~~","description":"Performs clip operation on features"},"api/geoprocessing/functions/clipMultiMerge":{"id":"api/geoprocessing/functions/clipMultiMerge","title":"clipMultiMerge()","description":"Performs clip by merging features2 coords into a single multipolygon."},"api/geoprocessing/functions/clipToPolygonFeatures":{"id":"api/geoprocessing/functions/clipToPolygonFeatures","title":"clipToPolygonFeatures()","description":"Takes a Polygon feature and returns the portion remaining after performing clipOperations"},"api/geoprocessing/functions/collectionHasGeometry":{"id":"api/geoprocessing/functions/collectionHasGeometry","title":"collectionHasGeometry()","description":"Parameters"},"api/geoprocessing/functions/createMetric":{"id":"api/geoprocessing/functions/createMetric","title":"createMetric()","description":"Creates a new metric.  Defaults to ID values of null and then copies in passed metric properties"},"api/geoprocessing/functions/createMetrics":{"id":"api/geoprocessing/functions/createMetrics","title":"createMetrics()","description":"Creates fully defined metrics from partial.  Metric values not provided are initialized to null"},"api/geoprocessing/functions/featureToSketch":{"id":"api/geoprocessing/functions/featureToSketch","title":"featureToSketch()","description":"Converts Feature to Sketch with reasonable defaults given for sketch properties if not provided"},"api/geoprocessing/functions/featureToSketchCollection":{"id":"api/geoprocessing/functions/featureToSketchCollection","title":"featureToSketchCollection()","description":"Converts FeatureCollection to SketchCollection with reasonable defaults given for sketch properties if not provided"},"api/geoprocessing/functions/fetchGeoJSON":{"id":"api/geoprocessing/functions/fetchGeoJSON","title":"fetchGeoJSON()","description":"Given geoprocessing function request, fetches the GeoJSON, which can also be sketch JSON"},"api/geoprocessing/functions/findAndUpdateMetricValue":{"id":"api/geoprocessing/functions/findAndUpdateMetricValue","title":"findAndUpdateMetricValue()","description":"Returns new sketchMetrics array with first sketchMetric matched set with new value."},"api/geoprocessing/functions/firstMatching":{"id":"api/geoprocessing/functions/firstMatching","title":"firstMatching()","description":"Returns the first item that returns true for filter"},"api/geoprocessing/functions/firstMatchingMetric":{"id":"api/geoprocessing/functions/firstMatchingMetric","title":"firstMatchingMetric()","description":"Returns the first metric that returns true for metricFilter"},"api/geoprocessing/functions/flattenByGroupAllClass":{"id":"api/geoprocessing/functions/flattenByGroupAllClass","title":"flattenByGroupAllClass()","description":"Aggregates metrics by group"},"api/geoprocessing/functions/flattenByGroupSketchAllClass":{"id":"api/geoprocessing/functions/flattenByGroupSketchAllClass","title":"flattenByGroupSketchAllClass()","description":"Flattens group class metrics, one for each group and sketch."},"api/geoprocessing/functions/flattenBySketchAllClass":{"id":"api/geoprocessing/functions/flattenBySketchAllClass","title":"flattenBySketchAllClass()","description":"Flattens class sketch metrics into array of objects, one for each sketch,"},"api/geoprocessing/functions/flattenSketchAllId":{"id":"api/geoprocessing/functions/flattenSketchAllId","title":"~~flattenSketchAllId()~~","description":"Returns one aggregate object for every sketch ID present in metrics,"},"api/geoprocessing/functions/gearTypeScore":{"id":"api/geoprocessing/functions/gearTypeScore","title":"gearTypeScore()","description":"Parameters"},"api/geoprocessing/functions/genFeature":{"id":"api/geoprocessing/functions/genFeature","title":"genFeature()","description":"Returns a Feature with given features geometry and properties. Reasonable defaults are given for properties not provided"},"api/geoprocessing/functions/genFeatureCollection":{"id":"api/geoprocessing/functions/genFeatureCollection","title":"genFeatureCollection()","description":"Given array of features, return a feature collection with given properties."},"api/geoprocessing/functions/genPreprocessor":{"id":"api/geoprocessing/functions/genPreprocessor","title":"genPreprocessor()","description":"Returns a preprocessor function given clipLoader function"},"api/geoprocessing/functions/genRandomPolygons":{"id":"api/geoprocessing/functions/genRandomPolygons","title":"genRandomPolygons()","description":"Generates random polygons within provided bounds.  numPolygons defaults to 300, maxradiallength to 0.5"},"api/geoprocessing/functions/genSampleNullSketch":{"id":"api/geoprocessing/functions/genSampleNullSketch","title":"genSampleNullSketch()","description":"Returns a Sketch with given geometry and Geometry type, Properties are reasonable random"},"api/geoprocessing/functions/genSampleNullSketchCollection":{"id":"api/geoprocessing/functions/genSampleNullSketchCollection","title":"genSampleNullSketchCollection()","description":"Given feature collection, return a sketch collection with reasonable random props."},"api/geoprocessing/functions/genSampleSketch":{"id":"api/geoprocessing/functions/genSampleSketch","title":"genSampleSketch()","description":"Returns a Sketch with given geometry and Geometry type, Properties are reasonable random"},"api/geoprocessing/functions/genSampleSketchCollection":{"id":"api/geoprocessing/functions/genSampleSketchCollection","title":"genSampleSketchCollection()","description":"Given feature collection, return a sketch collection with reasonable random props."},"api/geoprocessing/functions/genSampleSketchCollectionFromSketches":{"id":"api/geoprocessing/functions/genSampleSketchCollectionFromSketches","title":"genSampleSketchCollectionFromSketches()","description":"Given feature collection, return a sketch collection with reasonable random props."},"api/geoprocessing/functions/genSampleSketchContext":{"id":"api/geoprocessing/functions/genSampleSketchContext","title":"genSampleSketchContext()","description":"Returns"},"api/geoprocessing/functions/genSampleUserAttributes":{"id":"api/geoprocessing/functions/genSampleUserAttributes","title":"genSampleUserAttributes()","description":"Returns"},"api/geoprocessing/functions/genSketch":{"id":"api/geoprocessing/functions/genSketch","title":"genSketch()","description":"Returns a Sketch with given features geometry and properties. Reasonable defaults are given for properties not provided"},"api/geoprocessing/functions/genSketchCollection":{"id":"api/geoprocessing/functions/genSketchCollection","title":"genSketchCollection()","description":"Given array of sketches, return a sketch collection with given properties."},"api/geoprocessing/functions/genTaskCacheKey":{"id":"api/geoprocessing/functions/genTaskCacheKey","title":"genTaskCacheKey()","description":"Generates a cache key for a geoprocessing request, given sketch properties and optional extra parameters (must be JSON compatible object)"},"api/geoprocessing/functions/genZodErrorMessage":{"id":"api/geoprocessing/functions/genZodErrorMessage","title":"genZodErrorMessage()","description":"Parameters"},"api/geoprocessing/functions/getArea":{"id":"api/geoprocessing/functions/getArea","title":"getArea()","description":"Returns area of valid cells (not nodata) overlapping with feature.  If no valid cells found, returns 0."},"api/geoprocessing/functions/getClassificationLabel":{"id":"api/geoprocessing/functions/getClassificationLabel","title":"getClassificationLabel()","description":"Parameters"},"api/geoprocessing/functions/getCogFilename":{"id":"api/geoprocessing/functions/getCogFilename","title":"getCogFilename()","description":"Parameters"},"api/geoprocessing/functions/getDatasetBucketName":{"id":"api/geoprocessing/functions/getDatasetBucketName","title":"getDatasetBucketName()","description":"Type Parameters"},"api/geoprocessing/functions/getDatasourceById":{"id":"api/geoprocessing/functions/getDatasourceById","title":"getDatasourceById()","description":"find and return datasource from passed datasources"},"api/geoprocessing/functions/getExternalRasterDatasourceById":{"id":"api/geoprocessing/functions/getExternalRasterDatasourceById","title":"getExternalRasterDatasourceById()","description":"find and return external raster datasource from passed datasources"},"api/geoprocessing/functions/getExternalVectorDatasourceById":{"id":"api/geoprocessing/functions/getExternalVectorDatasourceById","title":"getExternalVectorDatasourceById()","description":"find and return external vector datasource from passed datasources"},"api/geoprocessing/functions/getFirstFromParam":{"id":"api/geoprocessing/functions/getFirstFromParam","title":"getFirstFromParam()","description":"Returns first element from param object at paramName key.  Parameter can be string or array of strings"},"api/geoprocessing/functions/getFlatGeobufFilename":{"id":"api/geoprocessing/functions/getFlatGeobufFilename","title":"getFlatGeobufFilename()","description":"Returns datasource filename in flatgeobuf format"},"api/geoprocessing/functions/getFlatGeobufPath":{"id":"api/geoprocessing/functions/getFlatGeobufPath","title":"getFlatGeobufPath()","description":"Parameters"},"api/geoprocessing/functions/getGeopackagePath":{"id":"api/geoprocessing/functions/getGeopackagePath","title":"getGeopackagePath()","description":"Parameters"},"api/geoprocessing/functions/getHistogram":{"id":"api/geoprocessing/functions/getHistogram","title":"getHistogram()","description":"Returns histogram of value overlap with geometry.  If no cells with a value are found within the geometry overlap, returns 0."},"api/geoprocessing/functions/getIndexIconPerc":{"id":"api/geoprocessing/functions/getIndexIconPerc","title":"getIndexIconPerc()","description":"Returns percent protection given index value,"},"api/geoprocessing/functions/getInternalRasterDatasourceById":{"id":"api/geoprocessing/functions/getInternalRasterDatasourceById","title":"getInternalRasterDatasourceById()","description":"find and return internal datasource from passed datasources"},"api/geoprocessing/functions/getInternalVectorDatasourceById":{"id":"api/geoprocessing/functions/getInternalVectorDatasourceById","title":"getInternalVectorDatasourceById()","description":"find and return internal vector datasource from passed datasources"},"api/geoprocessing/functions/getIucnCategoryForActivities":{"id":"api/geoprocessing/functions/getIucnCategoryForActivities","title":"getIucnCategoryForActivities()","description":"Given list of allowed activities in the sketch, returns the highest category allowable"},"api/geoprocessing/functions/getIucnCategoryForSketches":{"id":"api/geoprocessing/functions/getIucnCategoryForSketches","title":"getIucnCategoryForSketches()","description":"Return Category for each sketch keyed by sketchId"},"api/geoprocessing/functions/getIucnCategoryNameForSketches":{"id":"api/geoprocessing/functions/getIucnCategoryNameForSketches","title":"getIucnCategoryNameForSketches()","description":"Return Category name for each sketch keyed by sketchId"},"api/geoprocessing/functions/getIucnLevelNameForSketches":{"id":"api/geoprocessing/functions/getIucnLevelNameForSketches","title":"getIucnLevelNameForSketches()","description":"Return level name for each sketch keyed by sketchId"},"api/geoprocessing/functions/getJsonFilename":{"id":"api/geoprocessing/functions/getJsonFilename","title":"getJsonFilename()","description":"Returns datasource filename in geojson format"},"api/geoprocessing/functions/getJsonPath":{"id":"api/geoprocessing/functions/getJsonPath","title":"getJsonPath()","description":"Parameters"},"api/geoprocessing/functions/getJsonUserAttribute":{"id":"api/geoprocessing/functions/getJsonUserAttribute","title":"getJsonUserAttribute()","description":"Type Parameters"},"api/geoprocessing/functions/getKeys":{"id":"api/geoprocessing/functions/getKeys","title":"getKeys()","description":"Object.keys helper that returns strongly typed key values.  Uses assertion so make sure your type covers all the keys!"},"api/geoprocessing/functions/getMetricGroupObjectiveId":{"id":"api/geoprocessing/functions/getMetricGroupObjectiveId","title":"getMetricGroupObjectiveId()","description":"Returns the top-level objective assigned for the given MetricGroup."},"api/geoprocessing/functions/getMetricGroupObjectiveIds":{"id":"api/geoprocessing/functions/getMetricGroupObjectiveIds","title":"getMetricGroupObjectiveIds()","description":"Returns array of all objective IDs configured for the given MetricGroup."},"api/geoprocessing/functions/getMinYesCountMap":{"id":"api/geoprocessing/functions/getMinYesCountMap","title":"getMinYesCountMap()","description":"Returns an object mapping objective ID to ID of first classification that counts toward objective"},"api/geoprocessing/functions/getMpaClassificationName":{"id":"api/geoprocessing/functions/getMpaClassificationName","title":"getMpaClassificationName()","description":"Returns protection level given MPA classification index value"},"api/geoprocessing/functions/getObjectiveById":{"id":"api/geoprocessing/functions/getObjectiveById","title":"getObjectiveById()","description":"find and return objectives from passed objectives"},"api/geoprocessing/functions/getParamStringArray":{"id":"api/geoprocessing/functions/getParamStringArray","title":"getParamStringArray()","description":"Validates and returns string[] parameter from extraParams.  If param missing it returns an empty array"},"api/geoprocessing/functions/getRasterBoxSpherical":{"id":"api/geoprocessing/functions/getRasterBoxSpherical","title":"getRasterBoxSpherical()","description":"Parameters"},"api/geoprocessing/functions/getRasterDatasourceById":{"id":"api/geoprocessing/functions/getRasterDatasourceById","title":"getRasterDatasourceById()","description":"find and return raster datasource (internal or external) from passed datasources"},"api/geoprocessing/functions/getSketchCollectionChildIds":{"id":"api/geoprocessing/functions/getSketchCollectionChildIds","title":"~~getSketchCollectionChildIds()~~","description":"Given sketch collection, returns IDs of sketches in the collection"},"api/geoprocessing/functions/getSketchFeatures":{"id":"api/geoprocessing/functions/getSketchFeatures","title":"getSketchFeatures()","description":"Given sketch or sketch collection, returns just the individual sketch features inside."},"api/geoprocessing/functions/getSketchToMpaProtectionLevel":{"id":"api/geoprocessing/functions/getSketchToMpaProtectionLevel","title":"getSketchToMpaProtectionLevel()","description":"Returns object mapping sketch id to MPA classification"},"api/geoprocessing/functions/getSum":{"id":"api/geoprocessing/functions/getSum","title":"getSum()","description":"Returns sum of value overlap with geometry.  If no cells with a value are found within the geometry overlap, returns 0."},"api/geoprocessing/functions/getUserAttribute":{"id":"api/geoprocessing/functions/getUserAttribute","title":"getUserAttribute()","description":"getUserAttribute(sketchOrProps, exportid)"},"api/geoprocessing/functions/getVectorDatasourceById":{"id":"api/geoprocessing/functions/getVectorDatasourceById","title":"getVectorDatasourceById()","description":"find and return vector datasource (internal or external) from passed datasources"},"api/geoprocessing/functions/getZoneClassificationName":{"id":"api/geoprocessing/functions/getZoneClassificationName","title":"getZoneClassificationName()","description":"Parameters"},"api/geoprocessing/functions/groupBy":{"id":"api/geoprocessing/functions/groupBy","title":"groupBy()","description":"Similar to lodash groupBy"},"api/geoprocessing/functions/hasOwnProperty":{"id":"api/geoprocessing/functions/hasOwnProperty","title":"hasOwnProperty()","description":"Type narrowing to allow property checking when object can be multiple types"},"api/geoprocessing/functions/includeVirtualSketch":{"id":"api/geoprocessing/functions/includeVirtualSketch","title":"includeVirtualSketch()","description":"If sketch collection passes sketchTest, then returns new collection"},"api/geoprocessing/functions/isExternalDatasource":{"id":"api/geoprocessing/functions/isExternalDatasource","title":"isExternalDatasource()","description":"Parameters"},"api/geoprocessing/functions/isExternalRasterDatasource":{"id":"api/geoprocessing/functions/isExternalRasterDatasource","title":"isExternalRasterDatasource()","description":"Parameters"},"api/geoprocessing/functions/isExternalVectorDatasource":{"id":"api/geoprocessing/functions/isExternalVectorDatasource","title":"isExternalVectorDatasource()","description":"Parameters"},"api/geoprocessing/functions/isFeature":{"id":"api/geoprocessing/functions/isFeature","title":"isFeature()","description":"Check if object is a Feature.  Any code inside a block guarded by a conditional call to this function will have type narrowed"},"api/geoprocessing/functions/isFeatureCollection":{"id":"api/geoprocessing/functions/isFeatureCollection","title":"isFeatureCollection()","description":"Check if object is a Feature Collection.  Any code inside a block guarded by a conditional call to this function will have type narrowed"},"api/geoprocessing/functions/isGeometry":{"id":"api/geoprocessing/functions/isGeometry","title":"isGeometry()","description":"Check if object is a Feature.  Any code inside a block guarded by a conditional call to this function will have type narrowed to Feature"},"api/geoprocessing/functions/isImportRasterDatasourceConfig":{"id":"api/geoprocessing/functions/isImportRasterDatasourceConfig","title":"isImportRasterDatasourceConfig()","description":"Parameters"},"api/geoprocessing/functions/isImportVectorDatasourceConfig":{"id":"api/geoprocessing/functions/isImportVectorDatasourceConfig","title":"isImportVectorDatasourceConfig()","description":"Parameters"},"api/geoprocessing/functions/isinternalDatasource":{"id":"api/geoprocessing/functions/isinternalDatasource","title":"isinternalDatasource()","description":"Parameters"},"api/geoprocessing/functions/isInternalRasterDatasource":{"id":"api/geoprocessing/functions/isInternalRasterDatasource","title":"isInternalRasterDatasource()","description":"Parameters"},"api/geoprocessing/functions/isInternalVectorDatasource":{"id":"api/geoprocessing/functions/isInternalVectorDatasource","title":"isInternalVectorDatasource()","description":"Parameters"},"api/geoprocessing/functions/isLineStringFeature":{"id":"api/geoprocessing/functions/isLineStringFeature","title":"isLineStringFeature()","description":"Check if object is a Linestring.  Any code inside a block guarded by a conditional call to this function will have type narrowed"},"api/geoprocessing/functions/isLineStringSketchCollection":{"id":"api/geoprocessing/functions/isLineStringSketchCollection","title":"isLineStringSketchCollection()","description":"Parameters"},"api/geoprocessing/functions/isMetric":{"id":"api/geoprocessing/functions/isMetric","title":"isMetric()","description":"Checks if object is a Metric and returns narrowed type"},"api/geoprocessing/functions/isMetricArray":{"id":"api/geoprocessing/functions/isMetricArray","title":"isMetricArray()","description":"Checks if object is a Metric array and returns narrowed type"},"api/geoprocessing/functions/isMetricPack":{"id":"api/geoprocessing/functions/isMetricPack","title":"isMetricPack()","description":"Checks if object is a MetricPack.  Any code inside a block guarded by a conditional call to this function will have type narrowed to MetricPack"},"api/geoprocessing/functions/isMultiPolygonFeature":{"id":"api/geoprocessing/functions/isMultiPolygonFeature","title":"isMultiPolygonFeature()","description":"Check if object is a MultiPolygon.  Any code inside a block guarded by a conditional call to this function will have type narrowed"},"api/geoprocessing/functions/isMultiPolygonSketch":{"id":"api/geoprocessing/functions/isMultiPolygonSketch","title":"isMultiPolygonSketch()","description":"Checks if sketch is a MultiPolygon. Any code inside a block guarded by a conditional call to this function will have type narrowed to Sketch"},"api/geoprocessing/functions/isMultiPolygonSketchCollection":{"id":"api/geoprocessing/functions/isMultiPolygonSketchCollection","title":"isMultiPolygonSketchCollection()","description":"Parameters"},"api/geoprocessing/functions/isNullSketch":{"id":"api/geoprocessing/functions/isNullSketch","title":"isNullSketch()","description":"Checks if object is a NullSketch.  Any code inside a block guarded by a conditional call to this function will have type narrowed to NullSketch"},"api/geoprocessing/functions/isNullSketchCollection":{"id":"api/geoprocessing/functions/isNullSketchCollection","title":"isNullSketchCollection()","description":"Check if object is a NullSketchCollection.  Any code inside a block guarded by a conditional call to this function will have type narrowed to NullSketchCollection"},"api/geoprocessing/functions/isObject":{"id":"api/geoprocessing/functions/isObject","title":"isObject()","description":"Parameters"},"api/geoprocessing/functions/isPointFeature":{"id":"api/geoprocessing/functions/isPointFeature","title":"isPointFeature()","description":"Check if object is a Point.  Any code inside a block guarded by a conditional call to this function will have type narrowed"},"api/geoprocessing/functions/isPointSketchCollection":{"id":"api/geoprocessing/functions/isPointSketchCollection","title":"isPointSketchCollection()","description":"Parameters"},"api/geoprocessing/functions/isPolygonAllSketchCollection":{"id":"api/geoprocessing/functions/isPolygonAllSketchCollection","title":"isPolygonAllSketchCollection()","description":"Parameters"},"api/geoprocessing/functions/isPolygonAnyFeature":{"id":"api/geoprocessing/functions/isPolygonAnyFeature","title":"isPolygonAnyFeature()","description":"Check if object is a Polygon or MultiPolygon.  Any code inside a block guarded by a conditional call to this function will have type narrowed"},"api/geoprocessing/functions/isPolygonFeature":{"id":"api/geoprocessing/functions/isPolygonFeature","title":"isPolygonFeature()","description":"Check if object is a Polygon feature.  Any code inside a block guarded by a conditional call to this function will have type narrowed"},"api/geoprocessing/functions/isPolygonFeatureArray":{"id":"api/geoprocessing/functions/isPolygonFeatureArray","title":"isPolygonFeatureArray()","description":"Check if object is an array of Polygon features.  Any code inside a block guarded by a conditional call to this function will have type narrowed"},"api/geoprocessing/functions/isPolygonSketch":{"id":"api/geoprocessing/functions/isPolygonSketch","title":"isPolygonSketch()","description":"Checks if sketch is a Polygon"},"api/geoprocessing/functions/isPolygonSketchCollection":{"id":"api/geoprocessing/functions/isPolygonSketchCollection","title":"isPolygonSketchCollection()","description":"Parameters"},"api/geoprocessing/functions/isRasterDatasource":{"id":"api/geoprocessing/functions/isRasterDatasource","title":"isRasterDatasource()","description":"Parameters"},"api/geoprocessing/functions/isRbcsProtectionLevel":{"id":"api/geoprocessing/functions/isRbcsProtectionLevel","title":"isRbcsProtectionLevel()","description":"Type guard for checking string is one of supported objective IDs"},"api/geoprocessing/functions/isSketch":{"id":"api/geoprocessing/functions/isSketch","title":"isSketch()","description":"Checks if object is a Sketch.  Any code inside a block guarded by a conditional call to this function will have type narrowed to Sketch"},"api/geoprocessing/functions/isSketchCollection":{"id":"api/geoprocessing/functions/isSketchCollection","title":"isSketchCollection()","description":"Check if object is a SketchCollection.  Any code inside a block guarded by a conditional call to this function will have type narrowed to SketchCollection"},"api/geoprocessing/functions/isTruthyAttributeValue":{"id":"api/geoprocessing/functions/isTruthyAttributeValue","title":"isTruthyAttributeValue()","description":"Parameters"},"api/geoprocessing/functions/isVectorDatasource":{"id":"api/geoprocessing/functions/isVectorDatasource","title":"isVectorDatasource()","description":"Parameters"},"api/geoprocessing/functions/keyBy":{"id":"api/geoprocessing/functions/keyBy","title":"keyBy()","description":"Similar to lodash keyBy"},"api/geoprocessing/functions/maxWidth":{"id":"api/geoprocessing/functions/maxWidth","title":"maxWidth()","description":"Returns the maximum width of the geojson or bbox"},"api/geoprocessing/functions/metricsForSketch":{"id":"api/geoprocessing/functions/metricsForSketch","title":"metricsForSketch()","description":"Returns metrics for given sketch (can be an array of sketches)"},"api/geoprocessing/functions/metricsSketchIds":{"id":"api/geoprocessing/functions/metricsSketchIds","title":"metricsSketchIds()","description":"Returns metrics with matching sketchId (can be an array of sketchids)"},"api/geoprocessing/functions/metricsWithClassId":{"id":"api/geoprocessing/functions/metricsWithClassId","title":"metricsWithClassId()","description":"Returns metrics with matching sketchId (can be an array of sketchids)"},"api/geoprocessing/functions/metricsWithSketchId":{"id":"api/geoprocessing/functions/metricsWithSketchId","title":"metricsWithSketchId()","description":"Returns metrics with matching sketchId (can be an array of sketchids)"},"api/geoprocessing/functions/minWidth":{"id":"api/geoprocessing/functions/minWidth","title":"minWidth()","description":"Returns the minimum width of the bounding box of given feature"},"api/geoprocessing/functions/mpaClassMetric":{"id":"api/geoprocessing/functions/mpaClassMetric","title":"mpaClassMetric()","description":"Given sketch for rbcsMpa with rbcs activity userAttributes,"},"api/geoprocessing/functions/mpaClassMetrics":{"id":"api/geoprocessing/functions/mpaClassMetrics","title":"mpaClassMetrics()","description":"Given sketch for rbcsMpa or collection of sketches for rbcsMpas with rbcs activity userAttributes,"},"api/geoprocessing/functions/nestMetrics":{"id":"api/geoprocessing/functions/nestMetrics","title":"nestMetrics()","description":"Recursively groups metrics by ID in order of ids specified to create arbitrary nested hierarchy for fast lookup."},"api/geoprocessing/functions/overlapArea":{"id":"api/geoprocessing/functions/overlapArea","title":"~~overlapArea()~~","description":"Assuming sketches are within some outer boundary with size outerArea,"},"api/geoprocessing/functions/overlapAreaGroupMetrics":{"id":"api/geoprocessing/functions/overlapAreaGroupMetrics","title":"overlapAreaGroupMetrics()","description":"Generate overlap group metrics using overlapArea operation"},"api/geoprocessing/functions/overlapFeatures":{"id":"api/geoprocessing/functions/overlapFeatures","title":"overlapFeatures()","description":"Calculates overlap between sketch(es) and an array of polygon features."},"api/geoprocessing/functions/overlapFeaturesGroupMetrics":{"id":"api/geoprocessing/functions/overlapFeaturesGroupMetrics","title":"overlapFeaturesGroupMetrics()","description":"Generate overlap group metrics using overlapFeatures operation"},"api/geoprocessing/functions/overlapGroupMetrics":{"id":"api/geoprocessing/functions/overlapGroupMetrics","title":"overlapGroupMetrics()","description":"Given area overlap metrics stratified by class and sketch, returns new metrics also stratified by group"},"api/geoprocessing/functions/overlapRaster":{"id":"api/geoprocessing/functions/overlapRaster","title":"~~overlapRaster()~~","description":"Returns metrics representing sketch overlap with raster."},"api/geoprocessing/functions/overlapRasterClass":{"id":"api/geoprocessing/functions/overlapRasterClass","title":"overlapRasterClass()","description":"Calculates sum of overlap between sketches and a categorical raster with numeric values representing feature classes"},"api/geoprocessing/functions/overlapRasterGroupMetrics":{"id":"api/geoprocessing/functions/overlapRasterGroupMetrics","title":"overlapRasterGroupMetrics()","description":"Generate overlap group metrics using rasterMetrics operation"},"api/geoprocessing/functions/overlapSubarea":{"id":"api/geoprocessing/functions/overlapSubarea","title":"~~overlapSubarea()~~","description":"Returns area stats for sketch input after performing overlay operation against a subarea feature."},"api/geoprocessing/functions/packMetrics":{"id":"api/geoprocessing/functions/packMetrics","title":"packMetrics()","description":"Converts Metric array to a new MetricPack."},"api/geoprocessing/functions/parseGeoraster":{"id":"api/geoprocessing/functions/parseGeoraster","title":"parseGeoraster()","description":"Parameters"},"api/geoprocessing/functions/parseLambdaResponse":{"id":"api/geoprocessing/functions/parseLambdaResponse","title":"parseLambdaResponse()","description":"Parses result from worker lambda"},"api/geoprocessing/functions/percentGoalWithEdge":{"id":"api/geoprocessing/functions/percentGoalWithEdge","title":"percentGoalWithEdge()","description":"Special percent formatter designed to produce readable percent values for display given an upper percent goal"},"api/geoprocessing/functions/percentWithEdge":{"id":"api/geoprocessing/functions/percentWithEdge","title":"percentWithEdge()","description":"Special percent formatter designed to produce readable percent values for"},"api/geoprocessing/functions/randomFloat":{"id":"api/geoprocessing/functions/randomFloat","title":"randomFloat()","description":"Parameters"},"api/geoprocessing/functions/randomInt":{"id":"api/geoprocessing/functions/randomInt","title":"randomInt()","description":"Parameters"},"api/geoprocessing/functions/rasterMetrics":{"id":"api/geoprocessing/functions/rasterMetrics","title":"rasterMetrics()","description":"Calculates stats on the provided raster and returns as an array of Metric objects (defaults to sum stat)"},"api/geoprocessing/functions/rasterStats":{"id":"api/geoprocessing/functions/rasterStats","title":"rasterStats()","description":"Calculates over 10 different raster stats, optionally constrains to raster cells overlapping with feature."},"api/geoprocessing/functions/rasterStatsToMetrics":{"id":"api/geoprocessing/functions/rasterStatsToMetrics","title":"rasterStatsToMetrics()","description":"Converts an array of geoblaze raster StatsObjects to an array of Metrics"},"api/geoprocessing/functions/rbcsMpaToMetric":{"id":"api/geoprocessing/functions/rbcsMpaToMetric","title":"rbcsMpaToMetric()","description":"Parameters"},"api/geoprocessing/functions/rbcsZoneToMetric":{"id":"api/geoprocessing/functions/rbcsZoneToMetric","title":"rbcsZoneToMetric()","description":"Transforms an rbcs zone object to a metric"},"api/geoprocessing/functions/rekeyMetrics":{"id":"api/geoprocessing/functions/rekeyMetrics","title":"rekeyMetrics()","description":"Reorders metrics (by mutation) to a consistent key order for readability"},"api/geoprocessing/functions/rekeyObject":{"id":"api/geoprocessing/functions/rekeyObject","title":"rekeyObject()","description":"Reorders object, mutating in place, in the order provided"},"api/geoprocessing/functions/removeSketchCollPolygonHoles":{"id":"api/geoprocessing/functions/removeSketchCollPolygonHoles","title":"removeSketchCollPolygonHoles()","description":"Parameters"},"api/geoprocessing/functions/removeSketchPolygonHoles":{"id":"api/geoprocessing/functions/removeSketchPolygonHoles","title":"removeSketchPolygonHoles()","description":"Parameters"},"api/geoprocessing/functions/roundDecimal":{"id":"api/geoprocessing/functions/roundDecimal","title":"roundDecimal()","description":"Rounds a number to a fixed precision"},"api/geoprocessing/functions/roundLower":{"id":"api/geoprocessing/functions/roundLower","title":"roundLower()","description":"Formats number to string, rounding decimal to number of digits, with special handling of minimum bound"},"api/geoprocessing/functions/runLambdaWorker":{"id":"api/geoprocessing/functions/runLambdaWorker","title":"runLambdaWorker()","description":"Runs a function on a specified lambda worker"},"api/geoprocessing/functions/sampleSketchReportContextValue":{"id":"api/geoprocessing/functions/sampleSketchReportContextValue","title":"sampleSketchReportContextValue()","description":"Creates a ReportContextValue object for a Sketch with sample values.  overrides will be merged in, replacing default values"},"api/geoprocessing/functions/scanTasks":{"id":"api/geoprocessing/functions/scanTasks","title":"scanTasks()","description":"Parameters"},"api/geoprocessing/functions/sketchToId":{"id":"api/geoprocessing/functions/sketchToId","title":"sketchToId()","description":"Given sketch(es), returns ID(s)"},"api/geoprocessing/functions/sketchToZone":{"id":"api/geoprocessing/functions/sketchToZone","title":"sketchToZone()","description":"Parameters"},"api/geoprocessing/functions/sortMetrics":{"id":"api/geoprocessing/functions/sortMetrics","title":"sortMetrics()","description":"Sorts metrics to a consistent order for readability"},"api/geoprocessing/functions/sortMetricsDisplayOrder":{"id":"api/geoprocessing/functions/sortMetricsDisplayOrder","title":"sortMetricsDisplayOrder()","description":"Sorts metrics by ID given a user-defined metric dimension (sortId) and array of ID"},"api/geoprocessing/functions/splitFeatureAntimeridian":{"id":"api/geoprocessing/functions/splitFeatureAntimeridian","title":"splitFeatureAntimeridian()","description":"Splits a Feature or FeatureCollection on the 180 degree antimeridian"},"api/geoprocessing/functions/splitSketchAntimeridian":{"id":"api/geoprocessing/functions/splitSketchAntimeridian","title":"splitSketchAntimeridian()","description":"Splits a Sketch or SketchCollection on the 180 degree antimeridian"},"api/geoprocessing/functions/squareMeterToKilometer":{"id":"api/geoprocessing/functions/squareMeterToKilometer","title":"squareMeterToKilometer()","description":"Parameters"},"api/geoprocessing/functions/squareMeterToMile":{"id":"api/geoprocessing/functions/squareMeterToMile","title":"squareMeterToMile()","description":"Parameters"},"api/geoprocessing/functions/testWithinPerc":{"id":"api/geoprocessing/functions/testWithinPerc","title":"testWithinPerc()","description":"Expects that testValue is equal to expectedValue or optionally within percentage (defaults to .01 or 1%)"},"api/geoprocessing/functions/toFeatureArray":{"id":"api/geoprocessing/functions/toFeatureArray","title":"toFeatureArray()","description":"Helper to convert a Feature or a FeatureCollection to a Feature array"},"api/geoprocessing/functions/toFeaturePolygonArray":{"id":"api/geoprocessing/functions/toFeaturePolygonArray","title":"toFeaturePolygonArray()","description":"Parameters"},"api/geoprocessing/functions/toNullSketch":{"id":"api/geoprocessing/functions/toNullSketch","title":"toNullSketch()","description":"Returns sketch or sketch collection with null geometry"},"api/geoprocessing/functions/toNullSketchArray":{"id":"api/geoprocessing/functions/toNullSketchArray","title":"toNullSketchArray()","description":"Helper to convert a NullSketch or NullSketchCollection to a NullSketch array"},"api/geoprocessing/functions/toPercentMetric":{"id":"api/geoprocessing/functions/toPercentMetric","title":"toPercentMetric()","description":"Matches numerator metrics with denominator metrics and divides their value,"},"api/geoprocessing/functions/toRasterProjection":{"id":"api/geoprocessing/functions/toRasterProjection","title":"toRasterProjection()","description":"Reprojects a feature to the same projection as the raster."},"api/geoprocessing/functions/toShortSketches":{"id":"api/geoprocessing/functions/toShortSketches","title":"~~toShortSketches()~~","description":"Returns an array of shorthand sketches (id + name) given a Sketch or SketchCollection."},"api/geoprocessing/functions/toSketchArray":{"id":"api/geoprocessing/functions/toSketchArray","title":"toSketchArray()","description":"Helper to convert a Sketch or SketchCollection to a Sketch array, maintaining geometry type"},"api/geoprocessing/functions/unpackMetrics":{"id":"api/geoprocessing/functions/unpackMetrics","title":"unpackMetrics()","description":"Converts MetricPack to a new Metric array."},"api/geoprocessing/functions/updateCommandsSync":{"id":"api/geoprocessing/functions/updateCommandsSync","title":"updateCommandsSync()","description":"Run dynamodb update commands synchronously to avoid throttling, retrying on ThroughputError"},"api/geoprocessing/functions/valueFormatter":{"id":"api/geoprocessing/functions/valueFormatter","title":"valueFormatter()","description":"Given a number or string value and the name of a formatter function, returns a formatted value"},"api/geoprocessing/functions/zeroPolygon":{"id":"api/geoprocessing/functions/zeroPolygon","title":"zeroPolygon()","description":"Returns a zero polygon geometry (three [0,0] coordinates)"},"api/geoprocessing/functions/zeroSketch":{"id":"api/geoprocessing/functions/zeroSketch","title":"zeroSketch()","description":"Given sketch, returns the mutated sketch with a zero polygon geometry (three [0,0] coordinates)"},"api/geoprocessing/functions/zeroSketchArray":{"id":"api/geoprocessing/functions/zeroSketchArray","title":"zeroSketchArray()","description":"Given sketch array, returns the mutated sketches with a zero polygon geometry (three [0,0] coordinates)"},"api/geoprocessing/functions/zeroSketchCollection":{"id":"api/geoprocessing/functions/zeroSketchCollection","title":"zeroSketchCollection()","description":"Given sketch collection, returns the mutated collection with all child sketches switched to have zero polygon geometry (three [0,0] coordinates)"},"api/geoprocessing/functions/zoneClassMetrics":{"id":"api/geoprocessing/functions/zoneClassMetrics","title":"zoneClassMetrics()","description":"Given sketch for rbcsZone or collection of zone sketches with userAttributes for rcbs activities,"},"api/geoprocessing/index":{"id":"api/geoprocessing/index","title":"geoprocessing","description":"geoprocessing is the main module used by a geoprocessing project.  It includes everything needing for creating, building, testing, and deploying a geoprocessing project with the exception of UI components which are exported separately in client-ui."},"api/geoprocessing/interfaces/BaseImportDatasourceConfig":{"id":"api/geoprocessing/interfaces/BaseImportDatasourceConfig","title":"BaseImportDatasourceConfig","description":"Properties"},"api/geoprocessing/interfaces/CalcStatsOptions":{"id":"api/geoprocessing/interfaces/CalcStatsOptions","title":"CalcStatsOptions","description":"options accepted by geoblaze.stats() to calc-stats library"},"api/geoprocessing/interfaces/ClipOptions":{"id":"api/geoprocessing/interfaces/ClipOptions","title":"ClipOptions","description":"Optional parameters for preprocessor function"},"api/geoprocessing/interfaces/DatasourceClipOperation":{"id":"api/geoprocessing/interfaces/DatasourceClipOperation","title":"DatasourceClipOperation","description":"Parameters for clip operation using a datasource"},"api/geoprocessing/interfaces/DatasourceOptions":{"id":"api/geoprocessing/interfaces/DatasourceOptions","title":"DatasourceOptions","description":"Properties"},"api/geoprocessing/interfaces/DefaultExtraParams":{"id":"api/geoprocessing/interfaces/DefaultExtraParams","title":"DefaultExtraParams","description":"Common set of extra parameters that might be passed to a geoprocessing function"},"api/geoprocessing/interfaces/Feature":{"id":"api/geoprocessing/interfaces/Feature","title":"Feature\\\\<G, P\\\\>","description":"A feature object which contains a geometry and associated properties."},"api/geoprocessing/interfaces/FeatureClipOperation":{"id":"api/geoprocessing/interfaces/FeatureClipOperation","title":"FeatureClipOperation","description":"Parameters for clip operation using polygon features"},"api/geoprocessing/interfaces/FeatureCollection":{"id":"api/geoprocessing/interfaces/FeatureCollection","title":"FeatureCollection\\\\<G, P\\\\>","description":"A collection of feature objects."},"api/geoprocessing/interfaces/FeatureMap":{"id":"api/geoprocessing/interfaces/FeatureMap","title":"FeatureMap","description":"A simple map of features keyed by their name"},"api/geoprocessing/interfaces/FeatureTree":{"id":"api/geoprocessing/interfaces/FeatureTree","title":"FeatureTree","description":"Properties"},"api/geoprocessing/interfaces/GeogProp":{"id":"api/geoprocessing/interfaces/GeogProp","title":"GeogProp","description":"Properties"},"api/geoprocessing/interfaces/GeometryCollection":{"id":"api/geoprocessing/interfaces/GeometryCollection","title":"GeometryCollection\\\\<G\\\\>","description":"Geometry Collection"},"api/geoprocessing/interfaces/GeoprocessingHandlerOptions":{"id":"api/geoprocessing/interfaces/GeoprocessingHandlerOptions","title":"GeoprocessingHandlerOptions","description":"Extended by"},"api/geoprocessing/interfaces/GeoprocessingProject":{"id":"api/geoprocessing/interfaces/GeoprocessingProject","title":"GeoprocessingProject","description":"Properties"},"api/geoprocessing/interfaces/GeoprocessingRequestModel":{"id":"api/geoprocessing/interfaces/GeoprocessingRequestModel","title":"GeoprocessingRequestModel\\\\<G\\\\>","description":"Geoprocessing request internal data model, with full objects, no JSON strings"},"api/geoprocessing/interfaces/GeoprocessingServiceMetadata":{"id":"api/geoprocessing/interfaces/GeoprocessingServiceMetadata","title":"GeoprocessingServiceMetadata","description":"Expected public service metadata for each function"},"api/geoprocessing/interfaces/GeoprocessingTask":{"id":"api/geoprocessing/interfaces/GeoprocessingTask","title":"GeoprocessingTask\\\\<ResultType\\\\>","description":"Type Parameters"},"api/geoprocessing/interfaces/Georaster":{"id":"api/geoprocessing/interfaces/Georaster","title":"Georaster","description":"Properties"},"api/geoprocessing/interfaces/Histogram":{"id":"api/geoprocessing/interfaces/Histogram","title":"Histogram","description":"Indexable"},"api/geoprocessing/interfaces/HistogramOptions":{"id":"api/geoprocessing/interfaces/HistogramOptions","title":"HistogramOptions","description":"Properties"},"api/geoprocessing/interfaces/IucnActivity":{"id":"api/geoprocessing/interfaces/IucnActivity","title":"IucnActivity","description":"Properties"},"api/geoprocessing/interfaces/IucnActivityRank":{"id":"api/geoprocessing/interfaces/IucnActivityRank","title":"IucnActivityRank","description":"Properties"},"api/geoprocessing/interfaces/IucnCategory":{"id":"api/geoprocessing/interfaces/IucnCategory","title":"IucnCategory","description":"Extended by"},"api/geoprocessing/interfaces/IucnCategoryCombined":{"id":"api/geoprocessing/interfaces/IucnCategoryCombined","title":"IucnCategoryCombined","description":"Extends"},"api/geoprocessing/interfaces/LineString":{"id":"api/geoprocessing/interfaces/LineString","title":"LineString","description":"LineString geometry object."},"api/geoprocessing/interfaces/MetricGroupItem":{"id":"api/geoprocessing/interfaces/MetricGroupItem","title":"MetricGroupItem\\\\<ResultType\\\\>","description":"Extended by"},"api/geoprocessing/interfaces/MetricPack":{"id":"api/geoprocessing/interfaces/MetricPack","title":"MetricPack","description":"Alternative JSON format for metrics data that is smaller in size, better suited for blob storage and network transport"},"api/geoprocessing/interfaces/MultiLineString":{"id":"api/geoprocessing/interfaces/MultiLineString","title":"MultiLineString","description":"MultiLineString geometry object."},"api/geoprocessing/interfaces/MultiPolygon":{"id":"api/geoprocessing/interfaces/MultiPolygon","title":"MultiPolygon","description":"MultiPolygon geometry object."},"api/geoprocessing/interfaces/Node":{"id":"api/geoprocessing/interfaces/Node","title":"Node","description":"Properties"},"api/geoprocessing/interfaces/NullSketch":{"id":"api/geoprocessing/interfaces/NullSketch","title":"NullSketch","description":"Extends"},"api/geoprocessing/interfaces/NullSketchCollection":{"id":"api/geoprocessing/interfaces/NullSketchCollection","title":"NullSketchCollection","description":"Extends"},"api/geoprocessing/interfaces/PercentEdgeOptions":{"id":"api/geoprocessing/interfaces/PercentEdgeOptions","title":"PercentEdgeOptions","description":"Properties"},"api/geoprocessing/interfaces/Point":{"id":"api/geoprocessing/interfaces/Point","title":"Point","description":"Point geometry object."},"api/geoprocessing/interfaces/Polygon":{"id":"api/geoprocessing/interfaces/Polygon","title":"Polygon","description":"Polygon geometry object."},"api/geoprocessing/interfaces/PreprocessingHandlerOptions":{"id":"api/geoprocessing/interfaces/PreprocessingHandlerOptions","title":"PreprocessingHandlerOptions","description":"Extended by"},"api/geoprocessing/interfaces/PreprocessingRequest":{"id":"api/geoprocessing/interfaces/PreprocessingRequest","title":"PreprocessingRequest","description":"Properties"},"api/geoprocessing/interfaces/PreprocessingResponse":{"id":"api/geoprocessing/interfaces/PreprocessingResponse","title":"PreprocessingResponse\\\\<ResponseType\\\\>","description":"Type Parameters"},"api/geoprocessing/interfaces/PreprocessingService":{"id":"api/geoprocessing/interfaces/PreprocessingService","title":"PreprocessingService","description":"Properties"},"api/geoprocessing/interfaces/PreprocessingServiceMetadata":{"id":"api/geoprocessing/interfaces/PreprocessingServiceMetadata","title":"PreprocessingServiceMetadata","description":"Extends"},"api/geoprocessing/interfaces/ProjectClientConfig":{"id":"api/geoprocessing/interfaces/ProjectClientConfig","title":"ProjectClientConfig","description":"Properties"},"api/geoprocessing/interfaces/ProjectClientInterface":{"id":"api/geoprocessing/interfaces/ProjectClientInterface","title":"ProjectClientInterface","description":"Methods"},"api/geoprocessing/interfaces/RasterStatsOptions":{"id":"api/geoprocessing/interfaces/RasterStatsOptions","title":"RasterStatsOptions","description":"options accepted by rasterStats"},"api/geoprocessing/interfaces/RbcsObjective":{"id":"api/geoprocessing/interfaces/RbcsObjective","title":"RbcsObjective","description":"Extends"},"api/geoprocessing/interfaces/RegBasedClassificationMetric":{"id":"api/geoprocessing/interfaces/RegBasedClassificationMetric","title":"RegBasedClassificationMetric","description":"Extended metric for mpa-reg-based-classification results, either zone or mpa classification"},"api/geoprocessing/interfaces/Report":{"id":"api/geoprocessing/interfaces/Report","title":"Report","description":"Represents a single report, with one or more metrics"},"api/geoprocessing/interfaces/ReportContextValue":{"id":"api/geoprocessing/interfaces/ReportContextValue","title":"ReportContextValue","description":"Provides necessary context to ReportClient components, particularly for"},"api/geoprocessing/interfaces/ReportResult":{"id":"api/geoprocessing/interfaces/ReportResult","title":"ReportResult","description":"Report results consist of collections of metrics for sketches"},"api/geoprocessing/interfaces/ReportResultBase":{"id":"api/geoprocessing/interfaces/ReportResultBase","title":"ReportResultBase","description":"Metrics for reports not associated with sketches.  Used for precalculation"},"api/geoprocessing/interfaces/RootTaskItem":{"id":"api/geoprocessing/interfaces/RootTaskItem","title":"RootTaskItem\\\\<ResultType\\\\>","description":"Extends"},"api/geoprocessing/interfaces/RoundDecimalOptions":{"id":"api/geoprocessing/interfaces/RoundDecimalOptions","title":"RoundDecimalOptions","description":"Properties"},"api/geoprocessing/interfaces/SeaSketchReportingMessageEvent":{"id":"api/geoprocessing/interfaces/SeaSketchReportingMessageEvent","title":"SeaSketchReportingMessageEvent","description":"Properties"},"api/geoprocessing/interfaces/SeaSketchReportingToggleLanguageEvent":{"id":"api/geoprocessing/interfaces/SeaSketchReportingToggleLanguageEvent","title":"SeaSketchReportingToggleLanguageEvent","description":"Properties"},"api/geoprocessing/interfaces/SeaSketchReportingToggleLayerVisibilityEvent":{"id":"api/geoprocessing/interfaces/SeaSketchReportingToggleLayerVisibilityEvent","title":"SeaSketchReportingToggleLayerVisibilityEvent","description":"Properties"},"api/geoprocessing/interfaces/SeaSketchReportingVisibleLayersChangeEvent":{"id":"api/geoprocessing/interfaces/SeaSketchReportingVisibleLayersChangeEvent","title":"SeaSketchReportingVisibleLayersChangeEvent","description":"Properties"},"api/geoprocessing/interfaces/Sketch":{"id":"api/geoprocessing/interfaces/Sketch","title":"Sketch\\\\<G\\\\>","description":"Extends"},"api/geoprocessing/interfaces/SketchCollection":{"id":"api/geoprocessing/interfaces/SketchCollection","title":"SketchCollection\\\\<G\\\\>","description":"Extends"},"api/geoprocessing/interfaces/SketchMap":{"id":"api/geoprocessing/interfaces/SketchMap","title":"SketchMap","description":"A simple map of sketches and/or sketch collections keyed by their name"},"api/geoprocessing/interfaces/StatsObject":{"id":"api/geoprocessing/interfaces/StatsObject","title":"StatsObject","description":"Properties"},"api/geoprocessing/interfaces/TestExampleOutput":{"id":"api/geoprocessing/interfaces/TestExampleOutput","title":"TestExampleOutput","description":"Properties"},"api/geoprocessing/interfaces/VectorDataSourceDetails":{"id":"api/geoprocessing/interfaces/VectorDataSourceDetails","title":"VectorDataSourceDetails","description":"Properties"},"api/geoprocessing/interfaces/VectorDataSourceOptions":{"id":"api/geoprocessing/interfaces/VectorDataSourceOptions","title":"VectorDataSourceOptions","description":"Properties"},"api/geoprocessing/interfaces/VectorFeature":{"id":"api/geoprocessing/interfaces/VectorFeature","title":"VectorFeature","description":"A feature object which contains a geometry and associated properties."},"api/geoprocessing/interfaces/VectorPropertyFilter":{"id":"api/geoprocessing/interfaces/VectorPropertyFilter","title":"VectorPropertyFilter","description":"Specify one or more literal values for one or more vector Feature properties"},"api/geoprocessing/interfaces/WindowOptions":{"id":"api/geoprocessing/interfaces/WindowOptions","title":"WindowOptions","description":"defines the new raster image to generate as a window in the source raster image.  Resolution (cell size) is determined from this"},"api/geoprocessing/type-aliases/bandArithmetic":{"id":"api/geoprocessing/type-aliases/bandArithmetic","title":"bandArithmetic()","description":"Parameters"},"api/geoprocessing/type-aliases/BaseDatasource":{"id":"api/geoprocessing/type-aliases/BaseDatasource","title":"BaseDatasource","description":""},"api/geoprocessing/type-aliases/BBox":{"id":"api/geoprocessing/type-aliases/BBox","title":"BBox","description":"Bounding box"},"api/geoprocessing/type-aliases/ClassificationId":{"id":"api/geoprocessing/type-aliases/ClassificationId","title":"ClassificationId","description":"Unique string ID for classification given to sketches (e.g. zone classification, protection level)"},"api/geoprocessing/type-aliases/ClassStats":{"id":"api/geoprocessing/type-aliases/ClassStats","title":"ClassStats","description":""},"api/geoprocessing/type-aliases/ClientJsonConfig":{"id":"api/geoprocessing/type-aliases/ClientJsonConfig","title":"ClientJsonConfig","description":"Represents a geoprocessing client object"},"api/geoprocessing/type-aliases/ClipOperations":{"id":"api/geoprocessing/type-aliases/ClipOperations","title":"ClipOperations","description":"Supported clip operations"},"api/geoprocessing/type-aliases/DataClass":{"id":"api/geoprocessing/type-aliases/DataClass","title":"DataClass","description":"Represents a group of data classes."},"api/geoprocessing/type-aliases/Datasource":{"id":"api/geoprocessing/type-aliases/Datasource","title":"Datasource","description":""},"api/geoprocessing/type-aliases/EezLandUnion":{"id":"api/geoprocessing/type-aliases/EezLandUnion","title":"EezLandUnion","description":""},"api/geoprocessing/type-aliases/ExecutionMode":{"id":"api/geoprocessing/type-aliases/ExecutionMode","title":"ExecutionMode","description":""},"api/geoprocessing/type-aliases/ExternalRasterDatasource":{"id":"api/geoprocessing/type-aliases/ExternalRasterDatasource","title":"ExternalRasterDatasource","description":""},"api/geoprocessing/type-aliases/ExternalVectorDatasource":{"id":"api/geoprocessing/type-aliases/ExternalVectorDatasource","title":"ExternalVectorDatasource","description":""},"api/geoprocessing/type-aliases/EXTRA_RASTER_STAT":{"id":"api/geoprocessing/type-aliases/EXTRA_RASTER_STAT","title":"EXTRA\\\\_RASTER\\\\_STAT","description":""},"api/geoprocessing/type-aliases/FunctionExtraParams":{"id":"api/geoprocessing/type-aliases/FunctionExtraParams","title":"FunctionExtraParams","description":""},"api/geoprocessing/type-aliases/GEOBLAZE_RASTER_STAT":{"id":"api/geoprocessing/type-aliases/GEOBLAZE_RASTER_STAT","title":"GEOBLAZE\\\\_RASTER\\\\_STAT","description":""},"api/geoprocessing/type-aliases/Geographies":{"id":"api/geoprocessing/type-aliases/Geographies","title":"Geographies","description":""},"api/geoprocessing/type-aliases/Geography":{"id":"api/geoprocessing/type-aliases/Geography","title":"Geography","description":""},"api/geoprocessing/type-aliases/GeoJsonProperties":{"id":"api/geoprocessing/type-aliases/GeoJsonProperties","title":"GeoJsonProperties","description":""},"api/geoprocessing/type-aliases/Geometry":{"id":"api/geoprocessing/type-aliases/Geometry","title":"Geometry","description":"Geometry object."},"api/geoprocessing/type-aliases/GeoprocessingJsonConfig":{"id":"api/geoprocessing/type-aliases/GeoprocessingJsonConfig","title":"GeoprocessingJsonConfig","description":"Represents a single JS package"},"api/geoprocessing/type-aliases/GeoprocessingRequest":{"id":"api/geoprocessing/type-aliases/GeoprocessingRequest","title":"GeoprocessingRequest\\\\<G\\\\>","description":"Geoprocessing request sent via HTTP GET, with extraParams as url-encoded JSON string"},"api/geoprocessing/type-aliases/GeoprocessingRequestParams":{"id":"api/geoprocessing/type-aliases/GeoprocessingRequestParams","title":"GeoprocessingRequestParams","description":""},"api/geoprocessing/type-aliases/GeorasterMetadata":{"id":"api/geoprocessing/type-aliases/GeorasterMetadata","title":"GeorasterMetadata","description":""},"api/geoprocessing/type-aliases/GeoTypes":{"id":"api/geoprocessing/type-aliases/GeoTypes","title":"GeoTypes","description":""},"api/geoprocessing/type-aliases/get":{"id":"api/geoprocessing/type-aliases/get","title":"get()","description":"Parameters"},"api/geoprocessing/type-aliases/GroupMetricAgg":{"id":"api/geoprocessing/type-aliases/GroupMetricAgg","title":"GroupMetricAgg","description":"Single flattened metric with class values keyed by class name"},"api/geoprocessing/type-aliases/GroupMetricSketchAgg":{"id":"api/geoprocessing/type-aliases/GroupMetricSketchAgg","title":"GroupMetricSketchAgg","description":"Type declaration"},"api/geoprocessing/type-aliases/histogram":{"id":"api/geoprocessing/type-aliases/histogram","title":"histogram()","description":"Parameters"},"api/geoprocessing/type-aliases/identify":{"id":"api/geoprocessing/type-aliases/identify","title":"identify()","description":"Parameters"},"api/geoprocessing/type-aliases/ImportRasterDatasourceConfig":{"id":"api/geoprocessing/type-aliases/ImportRasterDatasourceConfig","title":"ImportRasterDatasourceConfig","description":""},"api/geoprocessing/type-aliases/ImportRasterDatasourceOptions":{"id":"api/geoprocessing/type-aliases/ImportRasterDatasourceOptions","title":"ImportRasterDatasourceOptions","description":""},"api/geoprocessing/type-aliases/ImportVectorDatasourceConfig":{"id":"api/geoprocessing/type-aliases/ImportVectorDatasourceConfig","title":"ImportVectorDatasourceConfig","description":"Full configuration needed to import a dataset"},"api/geoprocessing/type-aliases/ImportVectorDatasourceOptions":{"id":"api/geoprocessing/type-aliases/ImportVectorDatasourceOptions","title":"ImportVectorDatasourceOptions","description":""},"api/geoprocessing/type-aliases/InternalRasterDatasource":{"id":"api/geoprocessing/type-aliases/InternalRasterDatasource","title":"InternalRasterDatasource","description":""},"api/geoprocessing/type-aliases/InternalVectorDatasource":{"id":"api/geoprocessing/type-aliases/InternalVectorDatasource","title":"InternalVectorDatasource","description":""},"api/geoprocessing/type-aliases/ISO8601DateTime":{"id":"api/geoprocessing/type-aliases/ISO8601DateTime","title":"ISO8601DateTime","description":""},"api/geoprocessing/type-aliases/ISO8601Duration":{"id":"api/geoprocessing/type-aliases/ISO8601Duration","title":"ISO8601Duration","description":""},"api/geoprocessing/type-aliases/IucnActivityRankId":{"id":"api/geoprocessing/type-aliases/IucnActivityRankId","title":"IucnActivityRankId","description":""},"api/geoprocessing/type-aliases/JSONValue":{"id":"api/geoprocessing/type-aliases/JSONValue","title":"JSONValue","description":""},"api/geoprocessing/type-aliases/load":{"id":"api/geoprocessing/type-aliases/load","title":"load()","description":"Parameters"},"api/geoprocessing/type-aliases/LoadedPackage":{"id":"api/geoprocessing/type-aliases/LoadedPackage","title":"LoadedPackage","description":""},"api/geoprocessing/type-aliases/max":{"id":"api/geoprocessing/type-aliases/max","title":"max()","description":"Parameters"},"api/geoprocessing/type-aliases/mean":{"id":"api/geoprocessing/type-aliases/mean","title":"mean()","description":"Parameters"},"api/geoprocessing/type-aliases/median":{"id":"api/geoprocessing/type-aliases/median","title":"median()","description":"Parameters"},"api/geoprocessing/type-aliases/Metric":{"id":"api/geoprocessing/type-aliases/Metric","title":"Metric","description":"Represents a single record of a metric with a value, stratified by one or more dimensions."},"api/geoprocessing/type-aliases/MetricDimension":{"id":"api/geoprocessing/type-aliases/MetricDimension","title":"MetricDimension","description":""},"api/geoprocessing/type-aliases/MetricGroup":{"id":"api/geoprocessing/type-aliases/MetricGroup","title":"MetricGroup","description":"Represents a single metric, having one DataGroup"},"api/geoprocessing/type-aliases/MetricGroups":{"id":"api/geoprocessing/type-aliases/MetricGroups","title":"MetricGroups","description":""},"api/geoprocessing/type-aliases/MetricIdTypes":{"id":"api/geoprocessing/type-aliases/MetricIdTypes","title":"MetricIdTypes","description":""},"api/geoprocessing/type-aliases/MetricProperty":{"id":"api/geoprocessing/type-aliases/MetricProperty","title":"MetricProperty","description":""},"api/geoprocessing/type-aliases/Metrics":{"id":"api/geoprocessing/type-aliases/Metrics","title":"Metrics","description":""},"api/geoprocessing/type-aliases/min":{"id":"api/geoprocessing/type-aliases/min","title":"min()","description":"Parameters"},"api/geoprocessing/type-aliases/mode":{"id":"api/geoprocessing/type-aliases/mode","title":"mode()","description":"Parameters"},"api/geoprocessing/type-aliases/MpaClassification":{"id":"api/geoprocessing/type-aliases/MpaClassification","title":"MpaClassification","description":"Type declaration"},"api/geoprocessing/type-aliases/Nullable":{"id":"api/geoprocessing/type-aliases/Nullable","title":"Nullable\\\\<T\\\\>","description":"Type Parameters"},"api/geoprocessing/type-aliases/Objective":{"id":"api/geoprocessing/type-aliases/Objective","title":"Objective","description":""},"api/geoprocessing/type-aliases/ObjectiveAnswer":{"id":"api/geoprocessing/type-aliases/ObjectiveAnswer","title":"ObjectiveAnswer","description":""},"api/geoprocessing/type-aliases/ObjectiveAnswerMap":{"id":"api/geoprocessing/type-aliases/ObjectiveAnswerMap","title":"ObjectiveAnswerMap","description":"Generic type for mapping classification ID to whether it counds toward or meets an objective"},"api/geoprocessing/type-aliases/ObjectiveId":{"id":"api/geoprocessing/type-aliases/ObjectiveId","title":"ObjectiveId","description":"Unique name of objective"},"api/geoprocessing/type-aliases/Objectives":{"id":"api/geoprocessing/type-aliases/Objectives","title":"Objectives","description":""},"api/geoprocessing/type-aliases/OsmLandFeature":{"id":"api/geoprocessing/type-aliases/OsmLandFeature","title":"OsmLandFeature","description":""},"api/geoprocessing/type-aliases/Package":{"id":"api/geoprocessing/type-aliases/Package","title":"Package","description":"Represents a single JS package"},"api/geoprocessing/type-aliases/PartialReportContextValue":{"id":"api/geoprocessing/type-aliases/PartialReportContextValue","title":"PartialReportContextValue","description":"Type declaration"},"api/geoprocessing/type-aliases/Position":{"id":"api/geoprocessing/type-aliases/Position","title":"Position","description":"A Position is an array of coordinates."},"api/geoprocessing/type-aliases/Project":{"id":"api/geoprocessing/type-aliases/Project","title":"Project","description":""},"api/geoprocessing/type-aliases/rasterCalculator":{"id":"api/geoprocessing/type-aliases/rasterCalculator","title":"rasterCalculator()","description":"Parameters"},"api/geoprocessing/type-aliases/RasterDatasource":{"id":"api/geoprocessing/type-aliases/RasterDatasource","title":"RasterDatasource","description":""},"api/geoprocessing/type-aliases/RbcsMpaObjectiveAnswerMap":{"id":"api/geoprocessing/type-aliases/RbcsMpaObjectiveAnswerMap","title":"RbcsMpaObjectiveAnswerMap","description":"Mapping of RBCS MPA Classification ID to whether it counts toward or meets an objective"},"api/geoprocessing/type-aliases/RbcsMpaProtectionLevel":{"id":"api/geoprocessing/type-aliases/RbcsMpaProtectionLevel","title":"RbcsMpaProtectionLevel","description":""},"api/geoprocessing/type-aliases/SketchGeometryTypes":{"id":"api/geoprocessing/type-aliases/SketchGeometryTypes","title":"SketchGeometryTypes","description":""},"api/geoprocessing/type-aliases/SketchProperties":{"id":"api/geoprocessing/type-aliases/SketchProperties","title":"SketchProperties","description":"Properties of a Sketch, defines known keys as well as unknown for extensiblity"},"api/geoprocessing/type-aliases/stats":{"id":"api/geoprocessing/type-aliases/stats","title":"stats()","description":"Parameters"},"api/geoprocessing/type-aliases/Stats-1":{"id":"api/geoprocessing/type-aliases/Stats-1","title":"Stats","description":""},"api/geoprocessing/type-aliases/sum":{"id":"api/geoprocessing/type-aliases/sum","title":"sum()","description":"Parameters"},"api/geoprocessing/type-aliases/SUPPORTED_RASTER_STAT":{"id":"api/geoprocessing/type-aliases/SUPPORTED_RASTER_STAT","title":"SUPPORTED\\\\_RASTER\\\\_STAT","description":""},"api/geoprocessing/type-aliases/SupportedFormats":{"id":"api/geoprocessing/type-aliases/SupportedFormats","title":"SupportedFormats","description":""},"api/geoprocessing/type-aliases/TaskKey":{"id":"api/geoprocessing/type-aliases/TaskKey","title":"TaskKey","description":"Type declaration"},"api/geoprocessing/type-aliases/TypedArray":{"id":"api/geoprocessing/type-aliases/TypedArray","title":"TypedArray","description":"Typed array of data values, the basic building block of a geotiff"},"api/geoprocessing/type-aliases/UserAttribute":{"id":"api/geoprocessing/type-aliases/UserAttribute","title":"UserAttribute","description":"User-defined attributes with values for Sketch.  Defines known keys as well as unknown for extensiblity"},"api/geoprocessing/type-aliases/ValueFormatter":{"id":"api/geoprocessing/type-aliases/ValueFormatter","title":"ValueFormatter","description":"Options for formatting a given value."},"api/geoprocessing/type-aliases/VectorDatasource":{"id":"api/geoprocessing/type-aliases/VectorDatasource","title":"VectorDatasource","description":""},"api/geoprocessing/type-aliases/Zone":{"id":"api/geoprocessing/type-aliases/Zone","title":"Zone","description":""},"api/geoprocessing/type-aliases/ZoneColor":{"id":"api/geoprocessing/type-aliases/ZoneColor","title":"ZoneColor","description":""},"api/geoprocessing/type-aliases/ZoneId":{"id":"api/geoprocessing/type-aliases/ZoneId","title":"ZoneId","description":""},"api/geoprocessing/type-aliases/ZoneName":{"id":"api/geoprocessing/type-aliases/ZoneName","title":"ZoneName","description":""},"api/geoprocessing/variables/activityRanks":{"id":"api/geoprocessing/variables/activityRanks","title":"activityRanks","description":""},"api/geoprocessing/variables/baseDatasourceSchema":{"id":"api/geoprocessing/variables/baseDatasourceSchema","title":"baseDatasourceSchema","description":"Type declaration"},"api/geoprocessing/variables/bboxSchema":{"id":"api/geoprocessing/variables/bboxSchema","title":"bboxSchema","description":""},"api/geoprocessing/variables/box2dSchema":{"id":"api/geoprocessing/variables/box2dSchema","title":"box2dSchema","description":""},"api/geoprocessing/variables/box3dSchema":{"id":"api/geoprocessing/variables/box3dSchema","title":"box3dSchema","description":""},"api/geoprocessing/variables/classStatsSchema":{"id":"api/geoprocessing/variables/classStatsSchema","title":"classStatsSchema","description":"Pre-calculated stats by key by class"},"api/geoprocessing/variables/clientJsonConfigSchema":{"id":"api/geoprocessing/variables/clientJsonConfigSchema","title":"clientJsonConfigSchema","description":"Represents a geoprocessing client object"},"api/geoprocessing/variables/commonHeaders":{"id":"api/geoprocessing/variables/commonHeaders","title":"commonHeaders","description":"Type declaration"},"api/geoprocessing/variables/dataClassSchema":{"id":"api/geoprocessing/variables/dataClassSchema","title":"dataClassSchema","description":"Represents a single class of data. Ties it to an underlying datasource, holds attributes used for displaying in user interfaces"},"api/geoprocessing/variables/datasourceConfig":{"id":"api/geoprocessing/variables/datasourceConfig","title":"datasourceConfig","description":"Type declaration"},"api/geoprocessing/variables/datasourceFormatDescriptions":{"id":"api/geoprocessing/variables/datasourceFormatDescriptions","title":"datasourceFormatDescriptions","description":"Type declaration"},"api/geoprocessing/variables/datasourceSchema":{"id":"api/geoprocessing/variables/datasourceSchema","title":"datasourceSchema","description":""},"api/geoprocessing/variables/datasourcesSchema":{"id":"api/geoprocessing/variables/datasourcesSchema","title":"datasourcesSchema","description":""},"api/geoprocessing/variables/defaultReportContext":{"id":"api/geoprocessing/variables/defaultReportContext","title":"defaultReportContext","description":""},"api/geoprocessing/variables/DEFAULTS":{"id":"api/geoprocessing/variables/DEFAULTS","title":"DEFAULTS","description":""},"api/geoprocessing/variables/defaultStatValues":{"id":"api/geoprocessing/variables/defaultStatValues","title":"defaultStatValues","description":"Type declaration"},"api/geoprocessing/variables/externalDatasourceSchema":{"id":"api/geoprocessing/variables/externalDatasourceSchema","title":"externalDatasourceSchema","description":"Properties for external datasource"},"api/geoprocessing/variables/externalRasterDatasourceSchema":{"id":"api/geoprocessing/variables/externalRasterDatasourceSchema","title":"externalRasterDatasourceSchema","description":""},"api/geoprocessing/variables/externalVectorDatasourceSchema":{"id":"api/geoprocessing/variables/externalVectorDatasourceSchema","title":"externalVectorDatasourceSchema","description":""},"api/geoprocessing/variables/EXTRA_RASTER_STATS":{"id":"api/geoprocessing/variables/EXTRA_RASTER_STATS","title":"EXTRA\\\\_RASTER\\\\_STATS","description":"Additional raster stats calculated by geoprocessing library"},"api/geoprocessing/variables/extraParamsSchema":{"id":"api/geoprocessing/variables/extraParamsSchema","title":"extraParamsSchema","description":"Default set of additional parameters that a geoprocessing or preprocessing function can accept"},"api/geoprocessing/variables/fcSchema":{"id":"api/geoprocessing/variables/fcSchema","title":"fcSchema","description":"Zod schema for FeatureCollection containing polygons or multipolygons"},"api/geoprocessing/variables/featureSchema":{"id":"api/geoprocessing/variables/featureSchema","title":"featureSchema","description":"Zod schema for Feature containing Polygon or MultiPolygon"},"api/geoprocessing/variables/featuresSchema":{"id":"api/geoprocessing/variables/featuresSchema","title":"featuresSchema","description":""},"api/geoprocessing/variables/fixtures":{"id":"api/geoprocessing/variables/fixtures","title":"fixtures","description":"Type declaration"},"api/geoprocessing/variables/fullColor":{"id":"api/geoprocessing/variables/fullColor","title":"fullColor","description":""},"api/geoprocessing/variables/FULLY_PROTECTED_LEVEL":{"id":"api/geoprocessing/variables/FULLY_PROTECTED_LEVEL","title":"FULLY\\\\_PROTECTED\\\\_LEVEL","description":""},"api/geoprocessing/variables/GEOBLAZE_RASTER_STATS":{"id":"api/geoprocessing/variables/GEOBLAZE_RASTER_STATS","title":"GEOBLAZE\\\\_RASTER\\\\_STATS","description":"Stats supported by geoblaze.stats() function"},"api/geoprocessing/variables/geoblazeDefaultStatValues":{"id":"api/geoprocessing/variables/geoblazeDefaultStatValues","title":"geoblazeDefaultStatValues","description":"Type declaration"},"api/geoprocessing/variables/geographiesSchema":{"id":"api/geoprocessing/variables/geographiesSchema","title":"geographiesSchema","description":""},"api/geoprocessing/variables/geographySchema":{"id":"api/geoprocessing/variables/geographySchema","title":"geographySchema","description":"A geographic area (Polygon) for planning.  Typically used to represent a planning area"},"api/geoprocessing/variables/geoprocessingConfigSchema":{"id":"api/geoprocessing/variables/geoprocessingConfigSchema","title":"geoprocessingConfigSchema","description":"Represents a single JS package"},"api/geoprocessing/variables/geoTypesSchema":{"id":"api/geoprocessing/variables/geoTypesSchema","title":"geoTypesSchema","description":""},"api/geoprocessing/variables/globalDatasources":{"id":"api/geoprocessing/variables/globalDatasources","title":"globalDatasources","description":"Definitive list of global datasources for geoprocessing framework"},"api/geoprocessing/variables/highColor":{"id":"api/geoprocessing/variables/highColor","title":"highColor","description":""},"api/geoprocessing/variables/HIGHLY_PROTECTED_LEVEL":{"id":"api/geoprocessing/variables/HIGHLY_PROTECTED_LEVEL","title":"HIGHLY\\\\_PROTECTED\\\\_LEVEL","description":""},"api/geoprocessing/variables/importRasterDatasourceOptionsSchema":{"id":"api/geoprocessing/variables/importRasterDatasourceOptionsSchema","title":"importRasterDatasourceOptionsSchema","description":""},"api/geoprocessing/variables/importVectorDatasourceOptionsSchema":{"id":"api/geoprocessing/variables/importVectorDatasourceOptionsSchema","title":"importVectorDatasourceOptionsSchema","description":""},"api/geoprocessing/variables/internalDatasourceSchema":{"id":"api/geoprocessing/variables/internalDatasourceSchema","title":"internalDatasourceSchema","description":"Timestamp properties to ease syncing with local/published datasource files"},"api/geoprocessing/variables/internalImportSchema":{"id":"api/geoprocessing/variables/internalImportSchema","title":"internalImportSchema","description":"Properties for importing an internal datasource"},"api/geoprocessing/variables/internalRasterDatasourceSchema":{"id":"api/geoprocessing/variables/internalRasterDatasourceSchema","title":"internalRasterDatasourceSchema","description":""},"api/geoprocessing/variables/internalVectorDatasourceSchema":{"id":"api/geoprocessing/variables/internalVectorDatasourceSchema","title":"internalVectorDatasourceSchema","description":""},"api/geoprocessing/variables/internalVectorImportSchema":{"id":"api/geoprocessing/variables/internalVectorImportSchema","title":"internalVectorImportSchema","description":"Properties for import of internal vector datasources"},"api/geoprocessing/variables/iucnActivities":{"id":"api/geoprocessing/variables/iucnActivities","title":"iucnActivities","description":"Type declaration"},"api/geoprocessing/variables/iucnActivityCategories":{"id":"api/geoprocessing/variables/iucnActivityCategories","title":"iucnActivityCategories","description":""},"api/geoprocessing/variables/iucnCategoriesList":{"id":"api/geoprocessing/variables/iucnCategoriesList","title":"iucnCategoriesList","description":""},"api/geoprocessing/variables/iucnCategoriesMap":{"id":"api/geoprocessing/variables/iucnCategoriesMap","title":"iucnCategoriesMap","description":"IUCN category definitions.  Note categories 2/3 and 4/6 have been merged because they have the same allowed uses"},"api/geoprocessing/variables/iucnCategoryNames":{"id":"api/geoprocessing/variables/iucnCategoryNames","title":"iucnCategoryNames","description":""},"api/geoprocessing/variables/iucnLevels":{"id":"api/geoprocessing/variables/iucnLevels","title":"iucnLevels","description":""},"api/geoprocessing/variables/jsonSchema":{"id":"api/geoprocessing/variables/jsonSchema","title":"jsonSchema","description":""},"api/geoprocessing/variables/loadedPackageSchema":{"id":"api/geoprocessing/variables/loadedPackageSchema","title":"loadedPackageSchema","description":"Stricter schema for npm package.json metadata, with most fields guaranteed present"},"api/geoprocessing/variables/lowColor":{"id":"api/geoprocessing/variables/lowColor","title":"lowColor","description":""},"api/geoprocessing/variables/measurementScalesSchema":{"id":"api/geoprocessing/variables/measurementScalesSchema","title":"measurementScalesSchema","description":""},"api/geoprocessing/variables/measurementTypesSchema":{"id":"api/geoprocessing/variables/measurementTypesSchema","title":"measurementTypesSchema","description":""},"api/geoprocessing/variables/MetricDimensions":{"id":"api/geoprocessing/variables/MetricDimensions","title":"MetricDimensions","description":"Dimensions used in Metric"},"api/geoprocessing/variables/metricGroupSchema":{"id":"api/geoprocessing/variables/metricGroupSchema","title":"metricGroupSchema","description":"Defines a metric in combination with a datasource, with one or more data classes"},"api/geoprocessing/variables/metricGroupsSchema":{"id":"api/geoprocessing/variables/metricGroupsSchema","title":"metricGroupsSchema","description":""},"api/geoprocessing/variables/MetricProperties":{"id":"api/geoprocessing/variables/MetricProperties","title":"MetricProperties","description":"Properties used in Metric"},"api/geoprocessing/variables/metricSchema":{"id":"api/geoprocessing/variables/metricSchema","title":"metricSchema","description":"Type declaration"},"api/geoprocessing/variables/metricsSchema":{"id":"api/geoprocessing/variables/metricsSchema","title":"metricsSchema","description":""},"api/geoprocessing/variables/MODERATELY_PROTECTED_LEVEL":{"id":"api/geoprocessing/variables/MODERATELY_PROTECTED_LEVEL","title":"MODERATELY\\\\_PROTECTED\\\\_LEVEL","description":""},"api/geoprocessing/variables/multipolygonSchema":{"id":"api/geoprocessing/variables/multipolygonSchema","title":"multipolygonSchema","description":"Type declaration"},"api/geoprocessing/variables/OBJECTIVE_GREEN":{"id":"api/geoprocessing/variables/OBJECTIVE_GREEN","title":"OBJECTIVE\\\\_GREEN","description":""},"api/geoprocessing/variables/OBJECTIVE_MAYBE":{"id":"api/geoprocessing/variables/OBJECTIVE_MAYBE","title":"OBJECTIVE\\\\_MAYBE","description":""},"api/geoprocessing/variables/OBJECTIVE_NO":{"id":"api/geoprocessing/variables/OBJECTIVE_NO","title":"OBJECTIVE\\\\_NO","description":""},"api/geoprocessing/variables/OBJECTIVE_RED":{"id":"api/geoprocessing/variables/OBJECTIVE_RED","title":"OBJECTIVE\\\\_RED","description":""},"api/geoprocessing/variables/OBJECTIVE_YELLOW":{"id":"api/geoprocessing/variables/OBJECTIVE_YELLOW","title":"OBJECTIVE\\\\_YELLOW","description":""},"api/geoprocessing/variables/OBJECTIVE_YES":{"id":"api/geoprocessing/variables/OBJECTIVE_YES","title":"OBJECTIVE\\\\_YES","description":""},"api/geoprocessing/variables/objectiveAnswerMapSchema":{"id":"api/geoprocessing/variables/objectiveAnswerMapSchema","title":"objectiveAnswerMapSchema","description":""},"api/geoprocessing/variables/objectiveAnswerSchema":{"id":"api/geoprocessing/variables/objectiveAnswerSchema","title":"objectiveAnswerSchema","description":""},"api/geoprocessing/variables/objectiveCountsAnswers":{"id":"api/geoprocessing/variables/objectiveCountsAnswers","title":"objectiveCountsAnswers","description":"Readonly list of possible answers for whether sketch counts toward objective"},"api/geoprocessing/variables/objectiveCountsColorMap":{"id":"api/geoprocessing/variables/objectiveCountsColorMap","title":"objectiveCountsColorMap","description":"Object mapping answers for whether sketch counts toward objective to stop light colors - green / yellow / red"},"api/geoprocessing/variables/objectiveSchema":{"id":"api/geoprocessing/variables/objectiveSchema","title":"objectiveSchema","description":"Base planning objective, extend as needed for specific classification system or ad-hoc"},"api/geoprocessing/variables/objectivesSchema":{"id":"api/geoprocessing/variables/objectivesSchema","title":"objectivesSchema","description":""},"api/geoprocessing/variables/packageSchema":{"id":"api/geoprocessing/variables/packageSchema","title":"packageSchema","description":"Schema for npm package.json metadata, as found in the wild"},"api/geoprocessing/variables/PLANNING_AREA_TYPES":{"id":"api/geoprocessing/variables/PLANNING_AREA_TYPES","title":"PLANNING\\\\_AREA\\\\_TYPES","description":""},"api/geoprocessing/variables/planningAreaTypesSchema":{"id":"api/geoprocessing/variables/planningAreaTypesSchema","title":"planningAreaTypesSchema","description":""},"api/geoprocessing/variables/polygonSchema":{"id":"api/geoprocessing/variables/polygonSchema","title":"polygonSchema","description":"Type declaration"},"api/geoprocessing/variables/POORLY_PROTECTED_LEVEL":{"id":"api/geoprocessing/variables/POORLY_PROTECTED_LEVEL","title":"POORLY\\\\_PROTECTED\\\\_LEVEL","description":""},"api/geoprocessing/variables/projectSchema":{"id":"api/geoprocessing/variables/projectSchema","title":"projectSchema","description":"Type declaration"},"api/geoprocessing/variables/rasterDatasourceSchema":{"id":"api/geoprocessing/variables/rasterDatasourceSchema","title":"rasterDatasourceSchema","description":"Properties for raster datasource"},"api/geoprocessing/variables/rbcsAnchoringActivities":{"id":"api/geoprocessing/variables/rbcsAnchoringActivities","title":"rbcsAnchoringActivities","description":""},"api/geoprocessing/variables/rbcsAquacultureActivities":{"id":"api/geoprocessing/variables/rbcsAquacultureActivities","title":"rbcsAquacultureActivities","description":""},"api/geoprocessing/variables/rbcsConstants":{"id":"api/geoprocessing/variables/rbcsConstants","title":"rbcsConstants","description":""},"api/geoprocessing/variables/rbcsGearTypes":{"id":"api/geoprocessing/variables/rbcsGearTypes","title":"rbcsGearTypes","description":""},"api/geoprocessing/variables/rbcsMpaProtectionLevels":{"id":"api/geoprocessing/variables/rbcsMpaProtectionLevels","title":"rbcsMpaProtectionLevels","description":""},"api/geoprocessing/variables/rbcsScores":{"id":"api/geoprocessing/variables/rbcsScores","title":"rbcsScores","description":""},"api/geoprocessing/variables/ReportContext":{"id":"api/geoprocessing/variables/ReportContext","title":"ReportContext","description":""},"api/geoprocessing/variables/seaSketchReportingLanguageChangeEvent":{"id":"api/geoprocessing/variables/seaSketchReportingLanguageChangeEvent","title":"seaSketchReportingLanguageChangeEvent","description":""},"api/geoprocessing/variables/seaSketchReportingMessageEventType":{"id":"api/geoprocessing/variables/seaSketchReportingMessageEventType","title":"seaSketchReportingMessageEventType","description":""},"api/geoprocessing/variables/seaSketchReportingVisibleLayersChangeEvent":{"id":"api/geoprocessing/variables/seaSketchReportingVisibleLayersChangeEvent","title":"seaSketchReportingVisibleLayersChangeEvent","description":""},"api/geoprocessing/variables/statsSchema":{"id":"api/geoprocessing/variables/statsSchema","title":"statsSchema","description":"Type declaration"},"api/geoprocessing/variables/SUPPORTED_RASTER_STATS":{"id":"api/geoprocessing/variables/SUPPORTED_RASTER_STATS","title":"SUPPORTED\\\\_RASTER\\\\_STATS","description":"Combined raster stats supported by geoprocessing library"},"api/geoprocessing/variables/supportedFormatsSchema":{"id":"api/geoprocessing/variables/supportedFormatsSchema","title":"supportedFormatsSchema","description":""},"api/geoprocessing/variables/UNPROTECTED_LEVEL":{"id":"api/geoprocessing/variables/UNPROTECTED_LEVEL","title":"UNPROTECTED\\\\_LEVEL","description":""},"api/geoprocessing/variables/vectorDatasourceSchema":{"id":"api/geoprocessing/variables/vectorDatasourceSchema","title":"vectorDatasourceSchema","description":"Properties for vector datasource"},"api/geoprocessing/variables/version":{"id":"api/geoprocessing/variables/version","title":"version","description":"Type declaration"},"api/index":{"id":"api/index","title":"Typescript API","description":"Modules","sidebar":"tutorialSidebar"},"architecture/Architecture":{"id":"architecture/Architecture","title":"Architecture","description":"Library","sidebar":"tutorialSidebar"},"CLI":{"id":"CLI","title":"Command Line Interface (CLI)","description":"Each geoprocessing project provides a number of commands to get work done. They are accessible via your projects package.json scripts and run using npm run","sidebar":"tutorialSidebar"},"concepts/Concepts":{"id":"concepts/Concepts","title":"Concepts","description":"The SeaSketch platform supports the following planning process workflow:","sidebar":"tutorialSidebar"},"Contributing":{"id":"Contributing","title":"Contributing","description":"Common commands","sidebar":"tutorialSidebar"},"Devcontainer":{"id":"Devcontainer","title":"Devcontainer","description":"There are multiple options for developing a geoprocessing project in a devcontainer"},"EdgesAndLimits":{"id":"EdgesAndLimits","title":"Edge Cases & Limits","description":"Zero Geography - No Overlap With MetricGroup (NaN)","sidebar":"tutorialSidebar"},"Extending":{"id":"Extending","title":"Extending","description":"It is possible to extend the geoprocessing framework to meet your needs right in your project code space. Here are some common use cases.","sidebar":"tutorialSidebar"},"gip/GIP-1-i18n":{"id":"gip/GIP-1-i18n","title":"GIP 1: i18n Localization","description":"Geoprocessing Improvement Proposal 1","sidebar":"tutorialSidebar"},"gip/README":{"id":"gip/README","title":"GIP","description":"A Geoprocessing Improvement Proposal or (GIP) is a specification for a major improvement to the geoprocessing framework."},"intro":{"id":"intro","title":"Tutorial Intro","description":"Let\'s discover Docusaurus in less than 5 minutes."},"introduction":{"id":"introduction","title":"Introduction","description":"The SeaSketch Geoprocessing framework is an all-in-one solution for developing low-cost and low-maintenance geoprocessing functions and reports for the web, with Typescript. Simplified publish to cloud with auto-scaling to meet high demand.","sidebar":"tutorialSidebar"},"Migrating":{"id":"Migrating","title":"Migration Guide","description":"Instructions to migrate existing geoprocessing projects to newer versions.","sidebar":"tutorialSidebar"},"Testing":{"id":"Testing","title":"Testing","description":"Testing API calls using Postman","sidebar":"tutorialSidebar"},"Tipsandtricks":{"id":"Tipsandtricks","title":"Tips and Tricks","description":"Essential tips For configuring this framework using a specific operating system (usually Ubuntu).","sidebar":"tutorialSidebar"},"tutorial-basics/congratulations":{"id":"tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template."},"tutorial-basics/create-a-blog-post":{"id":"tutorial-basics/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed..."},"tutorial-basics/create-a-document":{"id":"tutorial-basics/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:"},"tutorial-basics/create-a-page":{"id":"tutorial-basics/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:"},"tutorial-basics/deploy-your-site":{"id":"tutorial-basics/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack)."},"tutorial-basics/markdown-features":{"id":"tutorial-basics/markdown-features","title":"Markdown Features","description":"Docusaurus supports Markdown and a few additional features."},"tutorial-extras/manage-docs-versions":{"id":"tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs."},"tutorial-extras/translate-your-site":{"id":"tutorial-extras/translate-your-site","title":"Translate your site","description":"Let\'s translate docs/intro.md to French."},"tutorials/Tutorials":{"id":"tutorials/Tutorials","title":"Tutorials","description":"These tutorials will teach you the fundamentals of creating and deploying a seasketch geoprocessing project. They expect you have a basic working knowledge of your computer, command line interfaces, and web application development. There is also a limit to what the framework can do out of the box and at some point you will likely need to extend it to create custom reports. What follows is a short list of resources to help you:","sidebar":"tutorialSidebar"}}}}')}}]);