"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[76927],{87407:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var n=s(74848),t=s(28453);const i={},c="overlapArea()",o={id:"api/geoprocessing/functions/overlapArea",title:"~~overlapArea()~~",description:"Assuming sketches are within some outer boundary with size outerArea,",source:"@site/docs/api/geoprocessing/functions/overlapArea.md",sourceDirName:"api/geoprocessing/functions",slug:"/api/geoprocessing/functions/overlapArea",permalink:"/geoprocessing/docs/next/api/geoprocessing/functions/overlapArea",draft:!1,unlisted:!1,editUrl:"https://github.com/seasketch/geoprocessing/tree/main/website/templates/shared/docs/api/geoprocessing/functions/overlapArea.md",tags:[],version:"current",frontMatter:{}},d={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Deprecated",id:"deprecated",level:2}];function a(e){const r={a:"a",code:"code",del:"del",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"overlaparea",children:(0,n.jsx)(r.del,{children:"overlapArea()"})})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"function overlapArea(\n   metricId, \n   sketch, \n   outerArea, \noptions): Promise<Metric[]>\n"})}),"\n",(0,n.jsx)(r.p,{children:"Assuming sketches are within some outer boundary with size outerArea,\ncalculates the area of each sketch and the proportion of outerArea they take up."}),"\n",(0,n.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameter"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"metricId"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"string"})}),(0,n.jsx)(r.td,{children:"Metric identifier"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"sketch"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.a,{href:"/geoprocessing/docs/next/api/geoprocessing/interfaces/Sketch",children:(0,n.jsx)(r.code,{children:"Sketch"})}),"<",(0,n.jsx)(r.a,{href:"/geoprocessing/docs/next/api/geoprocessing/interfaces/Polygon",children:(0,n.jsx)(r.code,{children:"Polygon"})}),"> | ",(0,n.jsx)(r.a,{href:"/geoprocessing/docs/next/api/geoprocessing/interfaces/SketchCollection",children:(0,n.jsx)(r.code,{children:"SketchCollection"})}),"<",(0,n.jsx)(r.a,{href:"/geoprocessing/docs/next/api/geoprocessing/interfaces/Polygon",children:(0,n.jsx)(r.code,{children:"Polygon"})}),">"]}),(0,n.jsx)(r.td,{children:"single sketch or collection."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"outerArea"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"number"})}),(0,n.jsx)(r.td,{children:"area of outer boundary (typically EEZ or planning area)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"options"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"object"})}),(0,n.jsx)(r.td,{children:"-"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.code,{children:"options.includeChildMetrics"}),"?"]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"boolean"})}),(0,n.jsx)(r.td,{children:"If sketch collection, will include its child sketch metrics in addition to collection metrics, defaults to true"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.code,{children:"options.includePercMetric"}),"?"]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"boolean"})}),(0,n.jsx)(r.td,{children:"Includes metrics with percent of total area, in addition to raw area value metrics, defaults to true"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.code,{children:"options.simplifyTolerance"}),"?"]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"number"})}),(0,n.jsx)(r.td,{children:"simplify sketches with tolerance in degrees. .000001 is a good first value to try. only used for calculating area of collection (avoiding clip union to remove overlap blowing up)"})]})]})]}),"\n",(0,n.jsx)(r.h2,{id:"returns",children:"Returns"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"Promise"}),"<",(0,n.jsx)(r.a,{href:"/geoprocessing/docs/next/api/geoprocessing/type-aliases/Metric",children:(0,n.jsx)(r.code,{children:"Metric"})}),"[]>"]}),"\n",(0,n.jsx)(r.h2,{id:"deprecated",children:"Deprecated"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"using geographies will clip your datasources and you can just use overlapFeatures"}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>c,x:()=>o});var n=s(96540);const t={},i=n.createContext(t);function c(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);