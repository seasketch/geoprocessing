"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[85590],{29464:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=n(74848),o=n(28453);const i={},s="Report Client",a={id:"reportclient",title:"Report Client",description:"Report clients are React UI components that can be registered with SeaSketch and when given a sketch URL as input, are able to run one or more geoprocessing functions, and display their results in a meaningful way.",source:"@site/docs/reportclient.md",sourceDirName:".",slug:"/reportclient",permalink:"/geoprocessing/docs/next/reportclient",draft:!1,unlisted:!1,editUrl:"https://github.com/seasketch/geoprocessing/tree/main/website/templates/shared/docs/reportclient.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Geoprocessing",permalink:"/geoprocessing/docs/next/geoprocessing"},next:{title:"Worker Functions",permalink:"/geoprocessing/docs/next/workers"}},c={},l=[{value:"Base Report",id:"base-report",level:2},{value:"Custom Report Sections",id:"custom-report-sections",level:2},{value:"Registering Report Client",id:"registering-report-client",level:2},{value:"Edge Cases",id:"edge-cases",level:2},{value:"Zero Geography - No Overlap With MetricGroup (NaN)",id:"zero-geography---no-overlap-with-metricgroup-nan",level:3}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"report-client",children:"Report Client"})}),"\n",(0,r.jsx)(t.p,{children:"Report clients are React UI components that can be registered with SeaSketch and when given a sketch URL as input, are able to run one or more geoprocessing functions, and display their results in a meaningful way."}),"\n",(0,r.jsxs)(t.p,{children:["When you ",(0,r.jsx)(t.code,{children:"init"})," a new project, it will create your first report client(s) for you in ",(0,r.jsx)(t.code,{children:"src/clients"}),". The examples below are based on initializing a ",(0,r.jsx)(t.code,{children:"blank project"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"base-report",children:"Base Report"}),"\n",(0,r.jsx)(t.p,{children:"The first step in creating a report client is to create the outer container. Here is the SimpleReport.tsx file generated with a blank project."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'import React from "react";\nimport Translator from "../components/TranslatorAsync.js";\nimport { SimpleCard } from "../components/SimpleCard.js";\n\n// Named export loaded by storybook\nexport const SimpleReport = () => {\n  return (\n    <Translator>\n      <SimpleCard />\n    </Translator>\n  );\n};\n\n// Default export lazy-loaded by top-level ReportApp\nexport default SimpleReport;\n'})}),"\n",(0,r.jsxs)(t.p,{children:["A more typical report client has one or more hideable ",(0,r.jsx)(t.a,{href:"/geoprocessing/docs/next/api/client-ui/functions/ReportPage",children:"ReportPage"})," components controlled by a ",(0,r.jsx)(t.a,{href:"/geoprocessing/docs/next/api/client-ui/functions/SegmentControl",children:"SegmentControl"})," with clickable tabs allowing the user to switch between pages."]}),"\n",(0,r.jsxs)(t.p,{children:["The following is the TabReport.tsx file generated when you ",(0,r.jsx)(t.code,{children:"init"})," your first project."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'import React, { useState } from "react";\nimport { useTranslation } from "react-i18next";\nimport { SegmentControl, ReportPage } from "@seasketch/geoprocessing/client-ui";\nimport { ViabilityPage } from "../components/ViabilityPage.js";\nimport Translator from "../components/TranslatorAsync.js";\n\nconst enableAllTabs = false;\nconst BaseReport = () => {\n  const { t } = useTranslation();\n  const viabilityId = "viability";\n  const segments = [{ id: viabilityId, label: t("Viability") }];\n  const [tab, setTab] = useState<string>(viabilityId);\n\n  return (\n    <>\n      <div style={{ marginTop: 5 }}>\n        <SegmentControl\n          value={tab}\n          onClick={(segment) => setTab(segment)}\n          segments={segments}\n        />\n      </div>\n      <ReportPage hidden={!enableAllTabs && tab !== viabilityId}>\n        <ViabilityPage />\n      </ReportPage>\n    </>\n  );\n};\n\n// Named export loaded by storybook\nexport const TabReport = () => {\n  return (\n    <Translator>\n      <BaseReport />\n    </Translator>\n  );\n};\n\n// Default export lazy-loaded by top-level ReportApp\nexport default TabReport;\n'})}),"\n",(0,r.jsx)(t.p,{children:"Notice that:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["BaseReport enables translations for all user-facing English string by wrapping them in ",(0,r.jsx)(t.code,{children:"t()"})," function calls.See the ",(0,r.jsx)(t.a,{href:"/geoprocessing/docs/next/gip/GIP-1-i18n",children:"internationalization"})," docs for more info."]}),"\n",(0,r.jsxs)(t.li,{children:["A BaseReport component is then created that is wrapped in a ",(0,r.jsx)(t.code,{children:"Translator"})," component to create the final ",(0,r.jsx)(t.code,{children:"TabReport"}),". The Translator is responsible for loading translations and tracking language change events."]}),"\n",(0,r.jsxs)(t.li,{children:["A ",(0,r.jsx)(t.code,{children:"ViabilityPage"})," component is rendered inside the ReportPage. This is the heart of creating custom reports (covered in the next section)."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"custom-report-sections",children:"Custom Report Sections"}),"\n",(0,r.jsx)(t.p,{children:"ResultsCard"}),"\n",(0,r.jsxs)(t.p,{children:["[The ",(0,r.jsx)(t.code,{children:"create:report"})," CLI command is available for"]}),"\n",(0,r.jsx)(t.h2,{id:"registering-report-client",children:"Registering Report Client"}),"\n",(0,r.jsxs)(t.p,{children:["BlankReport.tsx will already be registered in ",(0,r.jsx)(t.code,{children:"project/geoprocessing.json"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Each geoprocessing function must be registered in ",(0,r.jsx)(t.code,{children:"project/geoprocessing.json"}),", in order for it to be published by the project manifest and made discoverable by the SeaSketch platform."]}),"\n",(0,r.jsx)(t.h2,{id:""}),"\n",(0,r.jsxs)(t.p,{children:["It's possible to invoke a geoprocessing function using the ",(0,r.jsx)(t.a,{href:"./",children:"useFunction"})," hook."]}),"\n",(0,r.jsx)(t.h2,{id:"edge-cases",children:"Edge Cases"}),"\n",(0,r.jsx)(t.h3,{id:"zero-geography---no-overlap-with-metricgroup-nan",children:"Zero Geography - No Overlap With MetricGroup (NaN)"}),"\n",(0,r.jsxs)(t.p,{children:["This use case happens when no features for some class of data within a datasource, overlap with a geography. This produces a zero (0) value metric in precalc. If this zero value metric gets passed as the denominator to ",(0,r.jsx)(t.code,{children:"toPercentMetric(numeratorMetrics, denominatorMetrics)"}),", the function will return a ",(0,r.jsx)(t.code,{children:"NaN"})," value, rather than 0. This is so that downstream consumers can understand this isn't just any 0. There's an opportunity to tell the user that no matter where they put their sketch within the geography, there is no way for the value to be more than zero. For example, the ClassTable component looks for ",(0,r.jsx)(t.code,{children:"NaN"})," metric values and will automatically display 0%, along with an informative popover explaining that no data class features are within the current geography."]})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var r=n(96540);const o={},i=r.createContext(o);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);