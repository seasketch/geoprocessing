"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[54557],{31708:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>t,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var i=n(74848),o=n(28453);const s={},t="PercentEdgeOptions",l={id:"api/geoprocessing/interfaces/PercentEdgeOptions",title:"PercentEdgeOptions",description:"Properties",source:"@site/docs/api/geoprocessing/interfaces/PercentEdgeOptions.md",sourceDirName:"api/geoprocessing/interfaces",slug:"/api/geoprocessing/interfaces/PercentEdgeOptions",permalink:"/geoprocessing/docs/next/api/geoprocessing/interfaces/PercentEdgeOptions",draft:!1,unlisted:!1,editUrl:"https://github.com/seasketch/geoprocessing/tree/main/website/templates/shared/docs/api/geoprocessing/interfaces/PercentEdgeOptions.md",tags:[],version:"current",frontMatter:{}},d={},a=[{value:"Properties",id:"properties",level:2},{value:"digits?",id:"digits",level:3},{value:"digitsIfMatchLower?",id:"digitsifmatchlower",level:3},{value:"lower?",id:"lower",level:3},{value:"lowerBound?",id:"lowerbound",level:3},{value:"lowerOverride?",id:"loweroverride",level:3},{value:"upper?",id:"upper",level:3},{value:"upperBound?",id:"upperbound",level:3},{value:"upperOverride?",id:"upperoverride",level:3}];function p(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"percentedgeoptions",children:"PercentEdgeOptions"})}),"\n",(0,i.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(r.h3,{id:"digits",children:"digits?"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"optional digits: number;\n"})}),"\n",(0,i.jsx)(r.p,{children:"Number of decimal digits to round value to if is within lower or upper edge range.  defaults to 1.  Override with this option"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"digitsifmatchlower",children:"digitsIfMatchLower?"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"optional digitsIfMatchLower: number;\n"})}),"\n",(0,i.jsx)(r.p,{children:"Number of decimal digits to round value to if exactly matches lowerBound, defaults to 0 (whole number)"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"lower",children:"lower?"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"optional lower: number;\n"})}),"\n",(0,i.jsx)(r.p,{children:"Enable special formatting of values from lowerBound up to lower value.  Defaults to .001 aka 1/10 of a percent"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"lowerbound",children:"lowerBound?"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"optional lowerBound: number;\n"})}),"\n",(0,i.jsx)(r.p,{children:"Define a lower value bound.  Defaults to 0 (zero)."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"loweroverride",children:"lowerOverride?"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"optional lowerOverride: string;\n"})}),"\n",(0,i.jsx)(r.p,{children:'Optional string value to display if between zero and lower.  Overrides default special handling, no use of percent formatter.  Example - "< 0.1% for real"'}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"upper",children:"upper?"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"optional upper: number;\n"})}),"\n",(0,i.jsx)(r.p,{children:"Define lower bound to upper value.  Enable special formatting of values from upper to upperBound"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"upperbound",children:"upperBound?"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"optional upperBound: number;\n"})}),"\n",(0,i.jsx)(r.p,{children:"Define an upper value bound.  Enable special formatting of values from upper to upperBound"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"upperoverride",children:"upperOverride?"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"optional upperOverride: string;\n"})}),"\n",(0,i.jsx)(r.p,{children:'Optional string value to display if between upper and upperBound.  Overrides default special handling, no use of percent formatter.  Example - "almost 20%, keep going!"'})]})}function c(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>l});var i=n(96540);const o={},s=i.createContext(o);function t(e){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);