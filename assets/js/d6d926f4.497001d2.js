"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[12094],{20130:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>d,contentTitle:()=>n,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>l});var o=s(74848),c=s(28453);const t={},n="overlapGroupMetrics()",i={id:"api/geoprocessing/functions/overlapGroupMetrics",title:"overlapGroupMetrics()",description:"Given area overlap metrics stratified by class and sketch, returns new metrics also stratified by group",source:"@site/docs/api/geoprocessing/functions/overlapGroupMetrics.md",sourceDirName:"api/geoprocessing/functions",slug:"/api/geoprocessing/functions/overlapGroupMetrics",permalink:"/geoprocessing/docs/api/geoprocessing/functions/overlapGroupMetrics",draft:!1,unlisted:!1,editUrl:"https://github.com/seasketch/geoprocessing/tree/main/website/templates/shared/docs/api/geoprocessing/functions/overlapGroupMetrics.md",tags:[],version:"current",frontMatter:{}},d={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2}];function a(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"overlapgroupmetrics",children:"overlapGroupMetrics()"})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-ts",children:"function overlapGroupMetrics(options): Promise<Metric[]>\n"})}),"\n",(0,o.jsx)(r.p,{children:"Given area overlap metrics stratified by class and sketch, returns new metrics also stratified by group\nAssumes a sketch is member of only one group, determined by caller-provided metricToGroup\nFor each group+class, calculates area of overlap between sketches in group and featuresByClass (with overlap between group sketches removed first)\nTypes of metrics returned:\nsketch metrics: copy of caller-provided sketch metrics with addition of group ID\noverall metric for each group+class: takes sketches in group, subtracts overlap between them and overlap with higher group sketches, and runs operation\nIf a group has no sketches in it, then no group metrics will be included for that group, and group+class metric will be 0"}),"\n",(0,o.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(r.table,{children:[(0,o.jsx)(r.thead,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.th,{children:"Parameter"}),(0,o.jsx)(r.th,{children:"Type"}),(0,o.jsx)(r.th,{children:"Description"})]})}),(0,o.jsxs)(r.tbody,{children:[(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"options"})}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"object"})}),(0,o.jsx)(r.td,{children:"-"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"options.featuresByClass"})}),(0,o.jsxs)(r.td,{children:[(0,o.jsx)(r.code,{children:"Record"}),"<",(0,o.jsx)(r.code,{children:"string"}),", ",(0,o.jsx)(r.a,{href:"/geoprocessing/docs/api/geoprocessing/interfaces/Georaster",children:(0,o.jsx)(r.code,{children:"Georaster"})}),"> | ",(0,o.jsx)(r.code,{children:"Record"}),"<",(0,o.jsx)(r.code,{children:"string"}),", ",(0,o.jsx)(r.a,{href:"/geoprocessing/docs/api/geoprocessing/interfaces/Feature",children:(0,o.jsx)(r.code,{children:"Feature"})}),"<",(0,o.jsx)(r.a,{href:"/geoprocessing/docs/api/geoprocessing/interfaces/Polygon",children:(0,o.jsx)(r.code,{children:"Polygon"})}),", ",(0,o.jsx)(r.a,{href:"/geoprocessing/docs/api/geoprocessing/type-aliases/GeoJsonProperties",children:(0,o.jsx)(r.code,{children:"GeoJsonProperties"})}),">[]>"]}),(0,o.jsx)(r.td,{children:"features to overlap, keyed by class ID, use empty array if overlapArea operation"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"options.groupIds"})}),(0,o.jsxs)(r.td,{children:[(0,o.jsx)(r.code,{children:"string"}),"[]"]}),(0,o.jsx)(r.td,{children:"Group identifiers"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"options.metricId"})}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"string"})}),(0,o.jsx)(r.td,{children:"Caller-provided metric ID"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"options.metrics"})}),(0,o.jsxs)(r.td,{children:[(0,o.jsx)(r.code,{children:"object"}),"[]"]}),(0,o.jsx)(r.td,{children:"The metrics to group"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"options.metricToGroup"})}),(0,o.jsxs)(r.td,{children:["(",(0,o.jsx)(r.code,{children:"sketchMetric"}),") => ",(0,o.jsx)(r.code,{children:"string"})]}),(0,o.jsx)(r.td,{children:"Function that given sketch metric returns the group ID"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsxs)(r.td,{children:[(0,o.jsx)(r.code,{children:"options.onlyPresentGroups"}),"?"]}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"boolean"})}),(0,o.jsx)(r.td,{children:"only generate metrics for groups that sketches match to, rather than all groupIds"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"options.operation"})}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"OverlapGroupOperation"})}),(0,o.jsx)(r.td,{children:"overlap operation, defaults to overlapFeatures"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:(0,o.jsx)(r.code,{children:"options.sketch"})}),(0,o.jsxs)(r.td,{children:[(0,o.jsx)(r.a,{href:"/geoprocessing/docs/api/geoprocessing/interfaces/Sketch",children:(0,o.jsx)(r.code,{children:"Sketch"})}),"<",(0,o.jsx)(r.a,{href:"/geoprocessing/docs/api/geoprocessing/interfaces/Polygon",children:(0,o.jsx)(r.code,{children:"Polygon"})}),"> | ",(0,o.jsx)(r.a,{href:"/geoprocessing/docs/api/geoprocessing/interfaces/SketchCollection",children:(0,o.jsx)(r.code,{children:"SketchCollection"})}),"<",(0,o.jsx)(r.a,{href:"/geoprocessing/docs/api/geoprocessing/interfaces/Polygon",children:(0,o.jsx)(r.code,{children:"Polygon"})}),">"]}),(0,o.jsx)(r.td,{children:"Sketch - single or collection"})]})]})]}),"\n",(0,o.jsx)(r.h2,{id:"returns",children:"Returns"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.code,{children:"Promise"}),"<",(0,o.jsx)(r.a,{href:"/geoprocessing/docs/api/geoprocessing/type-aliases/Metric",children:(0,o.jsx)(r.code,{children:"Metric"})}),"[]>"]})]})}function h(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>n,x:()=>i});var o=s(96540);const c={},t=o.createContext(c);function n(e){const r=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:n(e.components),o.createElement(t.Provider,{value:r},e.children)}}}]);